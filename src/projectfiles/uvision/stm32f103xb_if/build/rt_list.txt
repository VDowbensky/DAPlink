; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\rt_list.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\rt_list.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\rt_list.crf ..\..\..\source\rtos\rt_List.c]
                          THUMB

                          AREA ||i.rt_dec_dly||, CODE, READONLY, ALIGN=2

                  rt_dec_dly PROC
;;;196    
;;;197    void rt_dec_dly (void) {
000000  b570              PUSH     {r4-r6,lr}
;;;198      /* Decrement delta time of list head: remove tasks having a value of zero.*/
;;;199      P_TCB p_rdy;
;;;200    
;;;201      if (os_dly.p_dlnk == NULL) {
000002  4e1a              LDR      r6,|L1.108|
000004  68f0              LDR      r0,[r6,#0xc]          ;197  ; os_dly
000006  2800              CMP      r0,#0                 ;197
000008  d02e              BEQ      |L1.104|
;;;202        return;
;;;203      }
;;;204      os_dly.delta_time--;
00000a  8ab0              LDRH     r0,[r6,#0x14]  ; os_dly
00000c  1e40              SUBS     r0,r0,#1
00000e  82b0              STRH     r0,[r6,#0x14]
000010  2500              MOVS     r5,#0
;;;205      while ((os_dly.delta_time == 0) && (os_dly.p_dlnk != NULL)) {
000012  e023              B        |L1.92|
                  |L1.20|
;;;206        p_rdy = os_dly.p_dlnk;
;;;207        if (p_rdy->p_rlnk != NULL) {
000014  68a0              LDR      r0,[r4,#8]
000016  b138              CBZ      r0,|L1.40|
;;;208          /* Task is really enqueued, remove task from semaphore/mailbox */
;;;209          /* timeout waiting list. */
;;;210          p_rdy->p_rlnk->p_lnk = p_rdy->p_lnk;
000018  6861              LDR      r1,[r4,#4]
;;;211          if (p_rdy->p_lnk != NULL) {
00001a  6041              STR      r1,[r0,#4]
00001c  6860              LDR      r0,[r4,#4]
00001e  b110              CBZ      r0,|L1.38|
;;;212            p_rdy->p_lnk->p_rlnk = p_rdy->p_rlnk;
000020  68a1              LDR      r1,[r4,#8]
;;;213            p_rdy->p_lnk = NULL;
000022  6081              STR      r1,[r0,#8]
000024  6065              STR      r5,[r4,#4]
                  |L1.38|
;;;214          }
;;;215          p_rdy->p_rlnk = NULL;
000026  60a5              STR      r5,[r4,#8]
                  |L1.40|
;;;216        }
;;;217        rt_put_prio (&os_rdy, p_rdy);
000028  4810              LDR      r0,|L1.108|
00002a  4621              MOV      r1,r4
00002c  3818              SUBS     r0,r0,#0x18
00002e  f7fffffe          BL       rt_put_prio
;;;218        os_dly.delta_time = p_rdy->delta_time;
000032  8aa0              LDRH     r0,[r4,#0x14]
000034  82b0              STRH     r0,[r6,#0x14]
;;;219        if (p_rdy->state == WAIT_ITV) {
000036  7860              LDRB     r0,[r4,#1]
000038  2804              CMP      r0,#4
00003a  d104              BNE      |L1.70|
;;;220          /* Calculate the next time for interval wait. */
;;;221          p_rdy->delta_time = p_rdy->interval_time + (U16)os_time;
00003c  490c              LDR      r1,|L1.112|
00003e  8ae0              LDRH     r0,[r4,#0x16]
000040  8809              LDRH     r1,[r1,#0]  ; os_time
000042  4408              ADD      r0,r0,r1
000044  82a0              STRH     r0,[r4,#0x14]
                  |L1.70|
;;;222        }
;;;223        p_rdy->state   = READY;
000046  2001              MOVS     r0,#1
000048  7060              STRB     r0,[r4,#1]
;;;224        p_rdy->ret_val = OS_R_TMO;
00004a  f8840020          STRB     r0,[r4,#0x20]
;;;225        os_dly.p_dlnk = p_rdy->p_dlnk;
00004e  68e0              LDR      r0,[r4,#0xc]
;;;226        if (p_rdy->p_dlnk != NULL) {
000050  60f0              STR      r0,[r6,#0xc]  ; os_dly
000052  68e0              LDR      r0,[r4,#0xc]
000054  b108              CBZ      r0,|L1.90|
;;;227          p_rdy->p_dlnk->p_blnk =  (P_TCB)&os_dly;
;;;228          p_rdy->p_dlnk = NULL;
000056  6106              STR      r6,[r0,#0x10]
000058  60e5              STR      r5,[r4,#0xc]
                  |L1.90|
;;;229        }
;;;230        p_rdy->p_blnk = NULL;
00005a  6125              STR      r5,[r4,#0x10]
                  |L1.92|
00005c  8ab0              LDRH     r0,[r6,#0x14]         ;205  ; os_dly
00005e  2800              CMP      r0,#0                 ;205
000060  d102              BNE      |L1.104|
000062  68f4              LDR      r4,[r6,#0xc]          ;205  ; os_dly
000064  2c00              CMP      r4,#0                 ;205
000066  d1d5              BNE      |L1.20|
                  |L1.104|
;;;231      }
;;;232    }
000068  bd70              POP      {r4-r6,pc}
;;;233    
                          ENDP

00006a  0000              DCW      0x0000
                  |L1.108|
                          DCD      ||.bss||+0x18
                  |L1.112|
                          DCD      os_time

                          AREA ||i.rt_get_first||, CODE, READONLY, ALIGN=1

                  rt_get_first PROC
;;;81     
;;;82     P_TCB rt_get_first (P_XCB p_CB) {
000000  4601              MOV      r1,r0
;;;83       /* Get task at head of list: it is the task with highest priority. */
;;;84       /* "p_CB" points to head of list. */
;;;85       P_TCB p_first;
;;;86     
;;;87       p_first = p_CB->p_lnk;
000002  6840              LDR      r0,[r0,#4]
;;;88       p_CB->p_lnk = p_first->p_lnk;
;;;89       if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
000004  2300              MOVS     r3,#0
000006  6842              LDR      r2,[r0,#4]            ;88
000008  604a              STR      r2,[r1,#4]
00000a  780a              LDRB     r2,[r1,#0]
00000c  2a02              CMP      r2,#2
00000e  d005              BEQ      |L2.28|
000010  2a01              CMP      r2,#1
000012  d003              BEQ      |L2.28|
000014  2a03              CMP      r2,#3
000016  d001              BEQ      |L2.28|
;;;90         if (p_first->p_lnk != NULL) {
;;;91           p_first->p_lnk->p_rlnk = (P_TCB)p_CB;
;;;92           p_first->p_lnk = NULL;
;;;93         }
;;;94         p_first->p_rlnk = NULL;
;;;95       }
;;;96       else {
;;;97         p_first->p_lnk = NULL;
000018  6043              STR      r3,[r0,#4]
;;;98       }
;;;99       return (p_first);
;;;100    }
00001a  4770              BX       lr
                  |L2.28|
00001c  6842              LDR      r2,[r0,#4]            ;90
00001e  b10a              CBZ      r2,|L2.36|
000020  6091              STR      r1,[r2,#8]            ;92
000022  6043              STR      r3,[r0,#4]            ;92
                  |L2.36|
000024  6083              STR      r3,[r0,#8]            ;94
000026  4770              BX       lr
;;;101    
                          ENDP


                          AREA ||i.rt_get_same_rdy_prio||, CODE, READONLY, ALIGN=2

                  rt_get_same_rdy_prio PROC
;;;115    
;;;116    P_TCB rt_get_same_rdy_prio (void) {
000000  4906              LDR      r1,|L3.28|
;;;117      /* Remove a task of same priority from ready list if any exists. Other-   */
;;;118      /* wise return NULL.                                                      */
;;;119      P_TCB p_first;
;;;120    
;;;121      p_first = os_rdy.p_lnk;
;;;122      if (p_first->prio == os_tsk.run->prio) {
000002  4b07              LDR      r3,|L3.32|
000004  6848              LDR      r0,[r1,#4]  ; os_rdy
000006  681b              LDR      r3,[r3,#0]  ; os_tsk
000008  7882              LDRB     r2,[r0,#2]
00000a  789b              LDRB     r3,[r3,#2]
00000c  429a              CMP      r2,r3
00000e  d102              BNE      |L3.22|
;;;123        os_rdy.p_lnk = os_rdy.p_lnk->p_lnk;
000010  6842              LDR      r2,[r0,#4]
;;;124        return (p_first);
000012  604a              STR      r2,[r1,#4]  ; os_rdy
;;;125      }
;;;126      return (NULL);
;;;127    }
000014  4770              BX       lr
                  |L3.22|
000016  2000              MOVS     r0,#0                 ;126
000018  4770              BX       lr
;;;128    
                          ENDP

00001a  0000              DCW      0x0000
                  |L3.28|
                          DCD      ||.bss||
                  |L3.32|
                          DCD      os_tsk

                          AREA ||i.rt_psq_enq||, CODE, READONLY, ALIGN=2

                  rt_psq_enq PROC
;;;289    
;;;290    void rt_psq_enq (OS_ID entry, U32 arg) {
000000  b4f0              PUSH     {r4-r7}
;;;291      /* Insert post service request "entry" into ps-queue. */
;;;292      U32 idx;
;;;293    
;;;294      idx = rt_inc_qi (os_psq->size, &os_psq->count, &os_psq->first);
000002  4f0f              LDR      r7,|L4.64|
000004  1cbc              ADDS     r4,r7,#2
000006  78fe              LDRB     r6,[r7,#3]  ; os_fifo
000008  463d              MOV      r5,r7
00000a  b672              CPSID    i
00000c  78ba              LDRB     r2,[r7,#2]
00000e  42b2              CMP      r2,r6
000010  d207              BCS      |L4.34|
000012  1c52              ADDS     r2,r2,#1              ;290
000014  7022              STRB     r2,[r4,#0]            ;290
000016  782a              LDRB     r2,[r5,#0]            ;290
000018  1c53              ADDS     r3,r2,#1              ;290
00001a  42b3              CMP      r3,r6                 ;290
00001c  d100              BNE      |L4.32|
00001e  2300              MOVS     r3,#0                 ;290
                  |L4.32|
000020  702b              STRB     r3,[r5,#0]            ;290
                  |L4.34|
000022  b662              CPSIE    i                     ;290
;;;295      if (idx < os_psq->size) {
000024  78fb              LDRB     r3,[r7,#3]  ; os_fifo
000026  4293              CMP      r3,r2
000028  d905              BLS      |L4.54|
;;;296        os_psq->q[idx].id  = entry;
00002a  eb0702c2          ADD      r2,r7,r2,LSL #3
00002e  e9c20101          STRD     r0,r1,[r2,#4]
;;;297        os_psq->q[idx].arg = arg;
;;;298      }
;;;299      else {
;;;300        os_error (OS_ERR_FIFO_OVF);
;;;301      }
;;;302    }
000032  bcf0              POP      {r4-r7}
000034  4770              BX       lr
                  |L4.54|
000036  bcf0              POP      {r4-r7}               ;300
000038  2002              MOVS     r0,#2                 ;300
00003a  f7ffbffe          B.W      os_error
;;;303    
                          ENDP

00003e  0000              DCW      0x0000
                  |L4.64|
                          DCD      os_fifo

                          AREA ||i.rt_put_dly||, CODE, READONLY, ALIGN=2

                  rt_put_dly PROC
;;;156    
;;;157    void rt_put_dly (P_TCB p_task, U16 delay) {
000000  4a10              LDR      r2,|L5.68|
000002  b510              PUSH     {r4,lr}
000004  68d3              LDR      r3,[r2,#0xc]
000006  b1ab              CBZ      r3,|L5.52|
;;;158      /* Put a task identified with "p_task" into chained delay wait list using */
;;;159      /* a delay value of "delay".                                              */
;;;160      P_TCB p;
;;;161      U32 delta,idelay = delay;
;;;162    
;;;163      p = (P_TCB)&os_dly;
;;;164      if (p->p_dlnk == NULL) {
;;;165        /* Delay list empty */
;;;166        delta = 0;
;;;167        goto last;
;;;168      }
;;;169      delta = os_dly.delta_time;
000008  4613              MOV      r3,r2
00000a  8a9b              LDRH     r3,[r3,#0x14]  ; os_dly
;;;170      while (delta < idelay) {
00000c  e003              B        |L5.22|
                  |L5.14|
;;;171        if (p->p_dlnk == NULL) {
00000e  b18c              CBZ      r4,|L5.52|
000010  4622              MOV      r2,r4
;;;172          /* End of list found */
;;;173    last: p_task->p_dlnk = NULL;
;;;174          p->p_dlnk = p_task;
;;;175          p_task->p_blnk = p;
;;;176          p->delta_time = (U16)(idelay - delta);
;;;177          p_task->delta_time = 0;
;;;178          return;
;;;179        }
;;;180        p = p->p_dlnk;
;;;181        delta += p->delta_time;
000012  8aa4              LDRH     r4,[r4,#0x14]
000014  4423              ADD      r3,r3,r4
                  |L5.22|
000016  68d4              LDR      r4,[r2,#0xc]          ;170
000018  428b              CMP      r3,r1                 ;170
00001a  d3f8              BCC      |L5.14|
;;;182      }
;;;183      /* Right place found */
;;;184      p_task->p_dlnk = p->p_dlnk;
;;;185      p->p_dlnk = p_task;
00001c  60c4              STR      r4,[r0,#0xc]
;;;186      p_task->p_blnk = p;
00001e  60d0              STR      r0,[r2,#0xc]
;;;187      if (p_task->p_dlnk != NULL) {
000020  6102              STR      r2,[r0,#0x10]
000022  68c4              LDR      r4,[r0,#0xc]
000024  b104              CBZ      r4,|L5.40|
;;;188        p_task->p_dlnk->p_blnk = p_task;
000026  6120              STR      r0,[r4,#0x10]
                  |L5.40|
;;;189      }
;;;190      p_task->delta_time = (U16)(delta - idelay);
000028  1a59              SUBS     r1,r3,r1
00002a  8281              STRH     r1,[r0,#0x14]
;;;191      p->delta_time -= p_task->delta_time;
00002c  8a90              LDRH     r0,[r2,#0x14]
00002e  1a40              SUBS     r0,r0,r1
000030  8290              STRH     r0,[r2,#0x14]
;;;192    }
000032  bd10              POP      {r4,pc}
                  |L5.52|
000034  2400              MOVS     r4,#0                 ;173
000036  60c4              STR      r4,[r0,#0xc]          ;174
000038  60d0              STR      r0,[r2,#0xc]          ;175
00003a  1ac9              SUBS     r1,r1,r3              ;176
00003c  6102              STR      r2,[r0,#0x10]         ;176
00003e  8291              STRH     r1,[r2,#0x14]         ;176
000040  8284              STRH     r4,[r0,#0x14]         ;177
000042  bd10              POP      {r4,pc}
;;;193    
                          ENDP

                  |L5.68|
                          DCD      ||.bss||+0x18

                          AREA ||i.rt_put_prio||, CODE, READONLY, ALIGN=1

                  rt_put_prio PROC
;;;46     
;;;47     void rt_put_prio (P_XCB p_CB, P_TCB p_task) {
000000  b530              PUSH     {r4,r5,lr}
;;;48       /* Put task identified with "p_task" into list ordered by priority.       */
;;;49       /* "p_CB" points to head of list; list has always an element at end with  */
;;;50       /* a priority less than "p_task->prio".                                   */
;;;51       P_TCB p_CB2;
;;;52       U32 prio;
;;;53       BOOL sem_mbx = __FALSE;
;;;54     
;;;55       if (p_CB->cb_type == SCB || p_CB->cb_type == MCB || p_CB->cb_type == MUCB) {
000002  7802              LDRB     r2,[r0,#0]
000004  2400              MOVS     r4,#0                 ;53
000006  2a02              CMP      r2,#2
000008  d003              BEQ      |L6.18|
00000a  2a01              CMP      r2,#1
00000c  d001              BEQ      |L6.18|
00000e  2a03              CMP      r2,#3
000010  d100              BNE      |L6.20|
                  |L6.18|
;;;56         sem_mbx = __TRUE;
000012  2401              MOVS     r4,#1
                  |L6.20|
;;;57       }
;;;58       prio = p_task->prio;
000014  788b              LDRB     r3,[r1,#2]
;;;59       p_CB2 = p_CB->p_lnk;
;;;60       /* Search for an entry in the list */
;;;61       while (p_CB2 != NULL && prio <= p_CB2->prio) {
000016  e000              B        |L6.26|
                  |L6.24|
;;;62         p_CB = (P_XCB)p_CB2;
000018  4610              MOV      r0,r2
                  |L6.26|
00001a  6842              LDR      r2,[r0,#4]            ;59
00001c  b112              CBZ      r2,|L6.36|
00001e  7895              LDRB     r5,[r2,#2]            ;61
000020  429d              CMP      r5,r3                 ;61
000022  d2f9              BCS      |L6.24|
                  |L6.36|
;;;63         p_CB2 = p_CB2->p_lnk;
;;;64       }
;;;65       /* Entry found, insert the task into the list */
;;;66       p_task->p_lnk = p_CB2;
;;;67       p_CB->p_lnk = p_task;
000024  604a              STR      r2,[r1,#4]
;;;68       if (sem_mbx) {
000026  6041              STR      r1,[r0,#4]
000028  b11c              CBZ      r4,|L6.50|
;;;69         if (p_CB2 != NULL) {
00002a  b102              CBZ      r2,|L6.46|
;;;70           p_CB2->p_rlnk = p_task;
00002c  6091              STR      r1,[r2,#8]
                  |L6.46|
;;;71         }
;;;72         p_task->p_rlnk = (P_TCB)p_CB;
00002e  6088              STR      r0,[r1,#8]
;;;73       }
;;;74       else {
;;;75         p_task->p_rlnk = NULL;
;;;76       }
;;;77     }
000030  bd30              POP      {r4,r5,pc}
                  |L6.50|
000032  2000              MOVS     r0,#0                 ;75
000034  e7fb              B        |L6.46|
;;;78     
                          ENDP


                          AREA ||i.rt_put_rdy_first||, CODE, READONLY, ALIGN=2

                  rt_put_rdy_first PROC
;;;104    
;;;105    void rt_put_rdy_first (P_TCB p_task) {
000000  4903              LDR      r1,|L7.16|
;;;106      /* Put task identified with "p_task" at the head of the ready list. The   */
;;;107      /* task must have at least a priority equal to highest priority in list.  */
;;;108      p_task->p_lnk = os_rdy.p_lnk;
000002  684a              LDR      r2,[r1,#4]  ; os_rdy
;;;109      p_task->p_rlnk = NULL;
000004  6042              STR      r2,[r0,#4]
000006  2200              MOVS     r2,#0
;;;110      os_rdy.p_lnk = p_task;
000008  6082              STR      r2,[r0,#8]
00000a  6048              STR      r0,[r1,#4]  ; os_rdy
;;;111    }
00000c  4770              BX       lr
;;;112    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      ||.bss||

                          AREA ||i.rt_resort_prio||, CODE, READONLY, ALIGN=2

                  rt_resort_prio PROC
;;;131    
;;;132    void rt_resort_prio (P_TCB p_task) {
000000  b510              PUSH     {r4,lr}
000002  6883              LDR      r3,[r0,#8]
000004  4604              MOV      r4,r0
000006  b92b              CBNZ     r3,|L8.20|
;;;133      /* Re-sort ordered lists after the priority of 'p_task' has changed.      */
;;;134      P_TCB p_CB;
;;;135    
;;;136      if (p_task->p_rlnk == NULL) {
;;;137        if (p_task->state == READY) {
000008  7860              LDRB     r0,[r4,#1]
00000a  2801              CMP      r0,#1
00000c  d10e              BNE      |L8.44|
;;;138          /* Task is chained into READY list. */
;;;139          p_CB = (P_TCB)&os_rdy;
00000e  4b08              LDR      r3,|L8.48|
;;;140          goto res;
000010  e003              B        |L8.26|
                  |L8.18|
;;;141        }
;;;142      }
;;;143      else {
;;;144        p_CB = p_task->p_rlnk;
;;;145        while (p_CB->cb_type == TCB) {
;;;146          /* Find a header of this task chain list. */
;;;147          p_CB = p_CB->p_rlnk;
000012  689b              LDR      r3,[r3,#8]
                  |L8.20|
000014  7818              LDRB     r0,[r3,#0]            ;145
000016  2800              CMP      r0,#0                 ;145
000018  d0fb              BEQ      |L8.18|
                  |L8.26|
;;;148        }
;;;149    res:rt_rmv_list (p_task);
00001a  4620              MOV      r0,r4
00001c  f7fffffe          BL       rt_rmv_list
;;;150        rt_put_prio ((P_XCB)p_CB, p_task);
000020  4621              MOV      r1,r4
000022  e8bd4010          POP      {r4,lr}
000026  4618              MOV      r0,r3
000028  f7ffbffe          B.W      rt_put_prio
                  |L8.44|
;;;151      }
;;;152    }
00002c  bd10              POP      {r4,pc}
;;;153    
                          ENDP

00002e  0000              DCW      0x0000
                  |L8.48|
                          DCD      ||.bss||

                          AREA ||i.rt_rmv_dly||, CODE, READONLY, ALIGN=1

                  rt_rmv_dly PROC
;;;264    
;;;265    void rt_rmv_dly (P_TCB p_task) {
000000  b510              PUSH     {r4,lr}
000002  6901              LDR      r1,[r0,#0x10]
000004  2900              CMP      r1,#0
000006  d00e              BEQ      |L9.38|
;;;266      /* Remove task identified with "p_task" from delay list if enqueued.      */
;;;267      P_TCB p_b;
;;;268    
;;;269      p_b = p_task->p_blnk;
;;;270      if (p_b != NULL) {
;;;271        /* Task is really enqueued */
;;;272        p_b->p_dlnk = p_task->p_dlnk;
000008  68c2              LDR      r2,[r0,#0xc]
;;;273        if (p_task->p_dlnk != NULL) {
00000a  60ca              STR      r2,[r1,#0xc]
00000c  68c3              LDR      r3,[r0,#0xc]
00000e  2200              MOVS     r2,#0
000010  b13b              CBZ      r3,|L9.34|
;;;274          /* 'p_task' is in the middle of list */
;;;275          p_b->delta_time += p_task->delta_time;
000012  8a8b              LDRH     r3,[r1,#0x14]
000014  8a84              LDRH     r4,[r0,#0x14]
000016  4423              ADD      r3,r3,r4
000018  828b              STRH     r3,[r1,#0x14]
;;;276          p_task->p_dlnk->p_blnk = p_b;
00001a  68c3              LDR      r3,[r0,#0xc]
;;;277          p_task->p_dlnk = NULL;
00001c  6119              STR      r1,[r3,#0x10]
00001e  60c2              STR      r2,[r0,#0xc]
000020  e000              B        |L9.36|
                  |L9.34|
;;;278        }
;;;279        else {
;;;280          /* 'p_task' is at the end of list */
;;;281          p_b->delta_time = 0;
000022  828a              STRH     r2,[r1,#0x14]
                  |L9.36|
;;;282        }
;;;283        p_task->p_blnk = NULL;
000024  6102              STR      r2,[r0,#0x10]
                  |L9.38|
;;;284      }
;;;285    }
000026  bd10              POP      {r4,pc}
;;;286    
                          ENDP


                          AREA ||i.rt_rmv_list||, CODE, READONLY, ALIGN=2

                  rt_rmv_list PROC
;;;236    
;;;237    void rt_rmv_list (P_TCB p_task) {
000000  6881              LDR      r1,[r0,#8]
000002  b139              CBZ      r1,|L10.20|
;;;238      /* Remove task identified with "p_task" from ready, semaphore or mailbox  */
;;;239      /* waiting list if enqueued.                                              */
;;;240      P_TCB p_b;
;;;241    
;;;242      if (p_task->p_rlnk != NULL) {
;;;243        /* A task is enqueued in semaphore / mailbox waiting list. */
;;;244        p_task->p_rlnk->p_lnk = p_task->p_lnk;
000004  6842              LDR      r2,[r0,#4]
;;;245        if (p_task->p_lnk != NULL) {
000006  604a              STR      r2,[r1,#4]
000008  6841              LDR      r1,[r0,#4]
00000a  2900              CMP      r1,#0
00000c  d001              BEQ      |L10.18|
;;;246          p_task->p_lnk->p_rlnk = p_task->p_rlnk;
00000e  6880              LDR      r0,[r0,#8]
000010  6088              STR      r0,[r1,#8]
                  |L10.18|
;;;247        }
;;;248        return;
;;;249      }
;;;250    
;;;251      p_b = (P_TCB)&os_rdy;
;;;252      while (p_b != NULL) {
;;;253        /* Search the ready list for task "p_task" */
;;;254        if (p_b->p_lnk == p_task) {
;;;255          p_b->p_lnk = p_task->p_lnk;
;;;256          return;
;;;257        }
;;;258        p_b = p_b->p_lnk;
;;;259      }
;;;260    }
000012  4770              BX       lr
                  |L10.20|
000014  4905              LDR      r1,|L10.44|
000016  e006              B        |L10.38|
                  |L10.24|
000018  684a              LDR      r2,[r1,#4]            ;254
00001a  4282              CMP      r2,r0                 ;254
00001c  d102              BNE      |L10.36|
00001e  6840              LDR      r0,[r0,#4]            ;255
000020  6048              STR      r0,[r1,#4]            ;256
000022  4770              BX       lr
                  |L10.36|
000024  4611              MOV      r1,r2
                  |L10.38|
000026  2900              CMP      r1,#0                 ;252
000028  d1f6              BNE      |L10.24|
00002a  4770              BX       lr
;;;261    
                          ENDP

                  |L10.44|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  os_rdy
                          %        24
                  os_dly
                          %        24

; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\dap_queue.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\dap_queue.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\dap_queue.crf ..\..\..\source\daplink\cmsis-dap\DAP_queue.c]
                          THUMB

                          AREA ||i.DAP_queue_execute_buf||, CODE, READONLY, ALIGN=1

                  DAP_queue_execute_buf PROC
;;;57     
;;;58     BOOL DAP_queue_execute_buf(DAP_queue * queue, const uint8_t *reqbuf, int len, uint8_t ** retbuf)
000000  b570              PUSH     {r4-r6,lr}
;;;59     {
000002  4604              MOV      r4,r0
;;;60         uint32_t rsize;
;;;61         if (queue->free_count > 0) {
000004  f8d00108          LDR      r0,[r0,#0x108]
000008  461d              MOV      r5,r3                 ;59
00000a  460e              MOV      r6,r1                 ;59
00000c  2800              CMP      r0,#0                 ;59
00000e  d02a              BEQ      |L1.102|
;;;62             if (len > DAP_PACKET_SIZE) {
000010  2a40              CMP      r2,#0x40
000012  dd00              BLE      |L1.22|
;;;63                 len = DAP_PACKET_SIZE;
000014  2240              MOVS     r2,#0x40
                  |L1.22|
000016  1e40              SUBS     r0,r0,#1
;;;64             }
;;;65             queue->free_count--;
;;;66             memcpy(queue->USB_Request[queue->recv_idx], reqbuf, len);
000018  f8c40108          STR      r0,[r4,#0x108]
00001c  f8d40110          LDR      r0,[r4,#0x110]
000020  eb041080          ADD      r0,r4,r0,LSL #6
000024  f7fffffe          BL       __aeabi_memcpy
;;;67             rsize = DAP_ExecuteCommand(reqbuf, queue->USB_Request[queue->recv_idx]);
000028  f8d40110          LDR      r0,[r4,#0x110]
00002c  eb041180          ADD      r1,r4,r0,LSL #6
000030  4630              MOV      r0,r6
000032  f7fffffe          BL       DAP_ExecuteCommand
;;;68             queue->resp_size[queue->recv_idx] = rsize & 0xFFFF; //get the response size
000036  f8d41110          LDR      r1,[r4,#0x110]
00003a  eb040141          ADD      r1,r4,r1,LSL #1
00003e  f8a10100          STRH     r0,[r1,#0x100]
;;;69             *retbuf = queue->USB_Request[queue->recv_idx];
000042  f8d40110          LDR      r0,[r4,#0x110]
000046  eb041080          ADD      r0,r4,r0,LSL #6
;;;70             queue->recv_idx = (queue->recv_idx + 1) % DAP_PACKET_COUNT;
00004a  6028              STR      r0,[r5,#0]
00004c  f8940110          LDRB     r0,[r4,#0x110]
000050  1c40              ADDS     r0,r0,#1
000052  f0000003          AND      r0,r0,#3
;;;71             queue->send_count++;
000056  f8c40110          STR      r0,[r4,#0x110]
00005a  f8d4010c          LDR      r0,[r4,#0x10c]
00005e  1c40              ADDS     r0,r0,#1
;;;72             return (__TRUE);
000060  f8c4010c          STR      r0,[r4,#0x10c]
000064  2001              MOVS     r0,#1
                  |L1.102|
;;;73         }
;;;74         return (__FALSE);
;;;75     }
000066  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.DAP_queue_get_send_buf||, CODE, READONLY, ALIGN=1

                  DAP_queue_get_send_buf PROC
;;;37     
;;;38     BOOL DAP_queue_get_send_buf(DAP_queue * queue, uint8_t ** buf, int * len)
000000  f8d0310c          LDR      r3,[r0,#0x10c]
;;;39     {
000004  b1e3              CBZ      r3,|L2.64|
000006  1e5b              SUBS     r3,r3,#1
;;;40         if (queue->send_count) {
;;;41             queue->send_count--;
;;;42             *buf = queue->USB_Request[queue->send_idx];
000008  f8c0310c          STR      r3,[r0,#0x10c]
00000c  f8d03114          LDR      r3,[r0,#0x114]
000010  eb001383          ADD      r3,r0,r3,LSL #6
;;;43             *len = queue->resp_size[queue->send_idx];
000014  600b              STR      r3,[r1,#0]
000016  f8d01114          LDR      r1,[r0,#0x114]
00001a  eb000141          ADD      r1,r0,r1,LSL #1
00001e  f8b11100          LDRH     r1,[r1,#0x100]
;;;44             queue->send_idx = (queue->send_idx + 1) % DAP_PACKET_COUNT;
000022  6011              STR      r1,[r2,#0]
000024  f8901114          LDRB     r1,[r0,#0x114]
000028  1c49              ADDS     r1,r1,#1
00002a  f0010103          AND      r1,r1,#3
;;;45             queue->free_count++;
00002e  f8c01114          STR      r1,[r0,#0x114]
000032  f8d01108          LDR      r1,[r0,#0x108]
000036  1c49              ADDS     r1,r1,#1
;;;46             return (__TRUE);
000038  f8c01108          STR      r1,[r0,#0x108]
00003c  2001              MOVS     r0,#1
;;;47         }
;;;48         return (__FALSE);
;;;49     }
00003e  4770              BX       lr
                  |L2.64|
000040  2000              MOVS     r0,#0                 ;48
000042  4770              BX       lr
;;;50     
                          ENDP


                          AREA ||i.DAP_queue_init||, CODE, READONLY, ALIGN=1

                  DAP_queue_init PROC
;;;65     #endif
;;;24     void DAP_queue_init(DAP_queue * queue)
000000  2200              MOVS     r2,#0
;;;25     {
;;;26         queue->recv_idx = 0;
;;;27         queue->send_idx = 0;
000002  f8c02110          STR      r2,[r0,#0x110]
;;;28         queue->free_count = FREE_COUNT_INIT;
000006  2104              MOVS     r1,#4
000008  f8c02114          STR      r2,[r0,#0x114]
00000c  e9c01242          STRD     r1,r2,[r0,#0x108]
;;;29         queue->send_count = SEND_COUNT_INIT;
;;;30     }
000010  4770              BX       lr
;;;31     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\..\\..\\source\\daplink\\cmsis-dap\\DAP_queue.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_DAP_queue_c_be26fe19____REV16|
#line 480 "..\\..\\..\\source\\cmsis-core\\cmsis_armcc.h"
|__asm___11_DAP_queue_c_be26fe19____REV16| PROC
#line 481

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_DAP_queue_c_be26fe19____REVSH|
#line 495
|__asm___11_DAP_queue_c_be26fe19____REVSH| PROC
#line 496

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_DAP_queue_c_be26fe19____RRX|
#line 682
|__asm___11_DAP_queue_c_be26fe19____RRX| PROC
#line 683

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\target_board.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\target_board.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\target_board.crf ..\..\..\source\target\target_board.c]
                          THUMB

                          AREA ||i.flash_algo_valid||, CODE, READONLY, ALIGN=2

                  flash_algo_valid PROC
;;;59     #pragma O0
;;;60     uint8_t flash_algo_valid(void)
000000  b510              PUSH     {r4,lr}
;;;61     #elif (!defined(__GNUC__))
;;;62     /* #pragma GCC push_options */
;;;63     /* #pragma GCC optimize("O0") */
;;;64     uint8_t __attribute__((optimize("O0"))) flash_algo_valid(void)
;;;65     #else
;;;66     #error "Unknown compiler"
;;;67     #endif
;;;68     {
;;;69         return (g_board_info.target_cfg != 0);
000002  4804              LDR      r0,|L1.20|
000004  f7fffffe          BL       __aeabi_uread4
000008  b108              CBZ      r0,|L1.14|
00000a  2001              MOVS     r0,#1
                  |L1.12|
;;;70     }
00000c  bd10              POP      {r4,pc}
                  |L1.14|
00000e  2000              MOVS     r0,#0                 ;69
000010  e7fc              B        |L1.12|
;;;71     
                          ENDP

000012  0000              DCW      0x0000
                  |L1.20|
                          DCD      g_board_info+0x10

                          AREA ||i.get_board_id||, CODE, READONLY, ALIGN=2

                  get_board_id PROC
;;;35     
;;;36     const char * get_board_id(void)
000000  b510              PUSH     {r4,lr}
;;;37     {
;;;38         if (g_board_info.target_cfg && g_board_info.target_cfg->rt_board_id) {
000002  4806              LDR      r0,|L2.28|
000004  f7fffffe          BL       __aeabi_uread4
000008  b128              CBZ      r0,|L2.22|
00000a  f50070ce          ADD      r0,r0,#0x19c
00000e  f7fffffe          BL       __aeabi_uread4
000012  2800              CMP      r0,#0
000014  d101              BNE      |L2.26|
                  |L2.22|
;;;39             return g_board_info.target_cfg->rt_board_id; //flexible board id
;;;40         }else{
;;;41             return g_board_info.board_id;
000016  4801              LDR      r0,|L2.28|
000018  380c              SUBS     r0,r0,#0xc
                  |L2.26|
;;;42         }
;;;43     }
00001a  bd10              POP      {r4,pc}
;;;44     
                          ENDP

                  |L2.28|
                          DCD      g_board_info+0x10

                          AREA ||i.get_family_id||, CODE, READONLY, ALIGN=2

                  get_family_id PROC
;;;44     
;;;45     uint16_t get_family_id(void)
000000  b510              PUSH     {r4,lr}
;;;46     {
;;;47         if (g_board_info.target_cfg && g_board_info.target_cfg->rt_family_id) {
000002  4809              LDR      r0,|L3.40|
000004  f7fffffe          BL       __aeabi_uread4
000008  b130              CBZ      r0,|L3.24|
00000a  f89011a1          LDRB     r1,[r0,#0x1a1]
00000e  f89021a0          LDRB     r2,[r0,#0x1a0]
000012  ea522001          ORRS     r0,r2,r1,LSL #8
000016  d105              BNE      |L3.36|
                  |L3.24|
;;;48             return g_board_info.target_cfg->rt_family_id; //flexible family id
;;;49         }else{
;;;50             return g_board_info.family_id;
000018  4803              LDR      r0,|L3.40|
00001a  3810              SUBS     r0,r0,#0x10
00001c  78c1              LDRB     r1,[r0,#3]  ; g_board_info
00001e  7882              LDRB     r2,[r0,#2]  ; g_board_info
000020  ea422001          ORR      r0,r2,r1,LSL #8
                  |L3.36|
;;;51         }
;;;52     }
000024  bd10              POP      {r4,pc}
;;;53     
                          ENDP

000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      g_board_info+0x10

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  g_board_info
000000  00010000          DCWU     0x0001,0x0000
000004  30303030          DCB      0x30,0x30,0x30,0x30
000008  00000000          DCB      0x00,0x00,0x00,0x00
                          DCDU     0x00000000
                          DCDU     0x00000000
000014  4d424544          DCB      0x4d,0x42,0x45,0x44
000018  20202020          DCB      0x20,0x20,0x20,0x20
00001c  48544d44          DCB      0x48,0x54,0x4d,0x44
000020  41504c49          DCB      0x41,0x50,0x4c,0x49
000024  4e4b2020          DCB      0x4e,0x4b,0x20,0x20
000028  20206874          DCB      0x20,0x20,0x68,0x74
00002c  7470733a          DCB      0x74,0x70,0x73,0x3a
000030  2f2f6d62          DCB      0x2f,0x2f,0x6d,0x62
000034  65642e6f          DCB      0x65,0x64,0x2e,0x6f
000038  72672f64          DCB      0x72,0x67,0x2f,0x64
00003c  65766963          DCB      0x65,0x76,0x69,0x63
000040  652f3f63          DCB      0x65,0x2f,0x3f,0x63
000044  6f64653d          DCB      0x6f,0x64,0x65,0x3d
000048  40553f76          DCB      0x40,0x55,0x3f,0x76
00004c  65727369          DCB      0x65,0x72,0x73,0x69
000050  6f6e3d40          DCB      0x6f,0x6e,0x3d,0x40
000054  563f7461          DCB      0x56,0x3f,0x74,0x61
000058  72676574          DCB      0x72,0x67,0x65,0x74
00005c  5f69643d          DCB      0x5f,0x69,0x64,0x3d
000060  40540000          DCB      0x40,0x54,0x00,0x00
                          DCDU     0x00000000
000068  00000000          DCB      0x00,0x00,0x00,0x00
00006c  00000000          DCB      0x00,0x00,0x00,0x00
000070  00000000          DCB      0x00,0x00,0x00,0x00
000074  0000              DCB      0x00,0x00
                          DCDU     0x00000000

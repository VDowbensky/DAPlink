; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\usbd_core_webusb.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\usbd_core_webusb.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\usbd_core_webusb.crf ..\..\..\source\usb\webusb\usbd_core_webusb.c]
                          THUMB

                          AREA ||i.USBD_EndPoint0_Setup_WebUSB_ReqToDevice||, CODE, READONLY, ALIGN=2

                  USBD_EndPoint0_Setup_WebUSB_ReqToDevice PROC
;;;33     
;;;34     __weak BOOL USBD_EndPoint0_Setup_WebUSB_ReqToDevice(void)
000000  b570              PUSH     {r4-r6,lr}
;;;35     {
;;;36         U8  *pD;
;;;37         U32 len, n;
;;;38     
;;;39         BOOL success = (__FALSE);
;;;40         if (USBD_SetupPacket.bRequest == usbd_webusb_vendor_code) {			/* vendor code correct? */
000002  4d1e              LDR      r5,|L1.124|
000004  491e              LDR      r1,|L1.128|
000006  2600              MOVS     r6,#0                 ;39
000008  7868              LDRB     r0,[r5,#1]  ; USBD_SetupPacket
00000a  7809              LDRB     r1,[r1,#0]  ; usbd_webusb_vendor_code
00000c  4288              CMP      r0,r1
00000e  d132              BNE      |L1.118|
;;;41             switch (USBD_SetupPacket.wIndex) {
000010  7968              LDRB     r0,[r5,#5]  ; USBD_SetupPacket
000012  7929              LDRB     r1,[r5,#4]  ; USBD_SetupPacket
000014  ea412000          ORR      r0,r1,r0,LSL #8
000018  2802              CMP      r0,#2
00001a  d12c              BNE      |L1.118|
;;;42                 case WEBUSB_REQUEST_GET_URL:
;;;43                     pD = (U8 *)USBD_WebUSBURLDescriptor;
00001c  4c19              LDR      r4,|L1.132|
;;;44                     if (USBD_SetupPacket.wValueL == 0) {
00001e  78aa              LDRB     r2,[r5,#2]  ; USBD_SetupPacket
000020  b32a              CBZ      r2,|L1.110|
;;;45                         success = (__FALSE);
;;;46                         break;
;;;47                     }
;;;48     
;;;49                     for (n = 0; n + 1 < USBD_SetupPacket.wValueL; n++) {
000022  2000              MOVS     r0,#0
000024  e003              B        |L1.46|
                  |L1.38|
;;;50                         if (((WEBUSB_URL_DESCRIPTOR *)pD)->bLength != 0) {
000026  7821              LDRB     r1,[r4,#0]
000028  b101              CBZ      r1,|L1.44|
;;;51                             pD += ((WEBUSB_URL_DESCRIPTOR *)pD)->bLength;
00002a  440c              ADD      r4,r4,r1
                  |L1.44|
00002c  1c40              ADDS     r0,r0,#1
                  |L1.46|
00002e  1c41              ADDS     r1,r0,#1              ;49
000030  428a              CMP      r2,r1                 ;49
000032  d8f8              BHI      |L1.38|
;;;52                         }
;;;53                     }
;;;54     
;;;55                     if (((WEBUSB_URL_DESCRIPTOR *)pD)->bLength == 0) {
000034  7820              LDRB     r0,[r4,#0]
000036  b1c8              CBZ      r0,|L1.108|
;;;56                         success = (__FALSE);
;;;57                         break;
;;;58                     }
;;;59                     strcat(((WEBUSB_URL_DESCRIPTOR *)pD)->URL, info_get_board_id());
000038  f7fffffe          BL       info_get_board_id
00003c  4601              MOV      r1,r0
00003e  1ce0              ADDS     r0,r4,#3
000040  f7fffffe          BL       strcat
;;;60                     USBD_EP0Data.pData = pD;
000044  4a10              LDR      r2,|L1.136|
;;;61                     len = ((WEBUSB_URL_DESCRIPTOR *)pD)->bLength;
;;;62     
;;;63                     success = (__TRUE);
000046  2601              MOVS     r6,#1
000048  6014              STR      r4,[r2,#0]            ;61  ; USBD_EP0Data
;;;64                     break;
;;;65     
;;;66                 default:
;;;67                     break;
;;;68             }
;;;69         }
;;;70     
;;;71         if (success) {
;;;72             if (len < USBD_SetupPacket.wLength) {
00004a  79e9              LDRB     r1,[r5,#7]  ; USBD_SetupPacket
00004c  79ab              LDRB     r3,[r5,#6]  ; USBD_SetupPacket
00004e  7820              LDRB     r0,[r4,#0]            ;61
000050  ea432101          ORR      r1,r3,r1,LSL #8
000054  4281              CMP      r1,r0
000056  d90b              BLS      |L1.112|
;;;73                 USBD_EP0Data.Count = len;
;;;74                 if (!(len & (usbd_max_packet0 - 1))) {
000058  490c              LDR      r1,|L1.140|
00005a  8090              STRH     r0,[r2,#4]            ;73
00005c  7809              LDRB     r1,[r1,#0]  ; usbd_max_packet0
00005e  1e49              SUBS     r1,r1,#1
000060  4208              TST      r0,r1
000062  d106              BNE      |L1.114|
;;;75                     USBD_ZLP = 1;
000064  490a              LDR      r1,|L1.144|
000066  2001              MOVS     r0,#1
000068  7008              STRB     r0,[r1,#0]
00006a  e002              B        |L1.114|
                  |L1.108|
00006c  2600              MOVS     r6,#0                 ;56
                  |L1.110|
00006e  e002              B        |L1.118|
                  |L1.112|
;;;76                 }
;;;77             } else {
;;;78                 USBD_EP0Data.Count = USBD_SetupPacket.wLength;
000070  8091              STRH     r1,[r2,#4]
                  |L1.114|
;;;79             }
;;;80     
;;;81             USBD_DataInStage();
000072  f7fffffe          BL       USBD_DataInStage
                  |L1.118|
;;;82         }
;;;83     
;;;84         return success;
000076  4630              MOV      r0,r6
;;;85     }
000078  bd70              POP      {r4-r6,pc}
                          ENDP

00007a  0000              DCW      0x0000
                  |L1.124|
                          DCD      USBD_SetupPacket
                  |L1.128|
                          DCD      usbd_webusb_vendor_code
                  |L1.132|
                          DCD      USBD_WebUSBURLDescriptor
                  |L1.136|
                          DCD      USBD_EP0Data
                  |L1.140|
                          DCD      usbd_max_packet0
                  |L1.144|
                          DCD      USBD_ZLP

; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\target_reset_nrf52.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\target_reset_nrf52.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\target_reset_nrf52.crf ..\..\..\source\family\nordic\target_reset_nrf52.c]
                          THUMB

                          AREA ||i.swd_set_target_reset_nrf||, CODE, READONLY, ALIGN=2

                  swd_set_target_reset_nrf PROC
;;;26     
;;;27     static void swd_set_target_reset_nrf(uint8_t asserted)
000000  e92d41fc          PUSH     {r2-r8,lr}
;;;28     {
;;;29         uint32_t ap_index_return;
;;;30     
;;;31         if (asserted) {
;;;32             swd_init_debug();
;;;33     
;;;34             swd_read_ap(0x010000FC, &ap_index_return);
000004  4f17              LDR      r7,|L1.100|
;;;35             if (ap_index_return == 0x02880000) {
;;;36                 // Have CTRL-AP
;;;37                 swd_write_ap(0x01000000, 1);  // CTRL-AP reset hold
;;;38             }
;;;39             else {
;;;40                 // No CTRL-AP - Perform a soft reset
;;;41                 // 0x05FA0000 = VECTKEY, 0x4 = SYSRESETREQ
;;;42                 uint32_t swd_mem_write_data = 0x05FA0000 | 0x4;
;;;43                 swd_write_memory(0xE000ED0C, (uint8_t *) &swd_mem_write_data, 4);
;;;44             }
;;;45             if(g_board_info.swd_set_target_reset){ //aditional reset
000006  4c18              LDR      r4,|L1.104|
000008  0005              MOVS     r5,r0                 ;28
00000a  f04f7880          MOV      r8,#0x1000000         ;37
00000e  f04f7622          MOV      r6,#0x2880000         ;35
000012  d01a              BEQ      |L1.74|
000014  f7fffffe          BL       swd_init_debug
000018  4669              MOV      r1,sp                 ;34
00001a  4638              MOV      r0,r7                 ;34
00001c  f7fffffe          BL       swd_read_ap
000020  9800              LDR      r0,[sp,#0]            ;35
000022  42b0              CMP      r0,r6                 ;35
000024  d101              BNE      |L1.42|
000026  2101              MOVS     r1,#1                 ;37
000028  e017              B        |L1.90|
                  |L1.42|
00002a  4810              LDR      r0,|L1.108|
00002c  9001              STR      r0,[sp,#4]            ;43
00002e  2204              MOVS     r2,#4                 ;43
000030  a901              ADD      r1,sp,#4              ;43
000032  480f              LDR      r0,|L1.112|
000034  f7fffffe          BL       swd_write_memory
                  |L1.56|
000038  4620              MOV      r0,r4                 ;43
00003a  f7fffffe          BL       __aeabi_uread4
00003e  0001              MOVS     r1,r0
000040  d001              BEQ      |L1.70|
;;;46                 g_board_info.swd_set_target_reset(asserted);
000042  4628              MOV      r0,r5
000044  4788              BLX      r1
                  |L1.70|
;;;47             }
;;;48         } else {
;;;49             swd_read_ap(0x010000FC, &ap_index_return);
;;;50             if (ap_index_return == 0x02880000) {
;;;51                 // Device has CTRL-AP
;;;52                 swd_write_ap(0x01000000, 0);  // CTRL-AP reset release
;;;53             }
;;;54             else {
;;;55                 // No CTRL-AP - Soft reset has been performed
;;;56             }
;;;57             if(g_board_info.swd_set_target_reset){
;;;58                 g_board_info.swd_set_target_reset(asserted);
;;;59             }
;;;60         }
;;;61     }
000046  e8bd81fc          POP      {r2-r8,pc}
                  |L1.74|
00004a  4669              MOV      r1,sp                 ;49
00004c  4638              MOV      r0,r7                 ;49
00004e  f7fffffe          BL       swd_read_ap
000052  9800              LDR      r0,[sp,#0]            ;50
000054  42b0              CMP      r0,r6                 ;50
000056  d1ef              BNE      |L1.56|
000058  2100              MOVS     r1,#0                 ;52
                  |L1.90|
00005a  4640              MOV      r0,r8                 ;52
00005c  f7fffffe          BL       swd_write_ap
000060  e7ea              B        |L1.56|
;;;62     
                          ENDP

000062  0000              DCW      0x0000
                  |L1.100|
                          DCD      0x010000fc
                  |L1.104|
                          DCD      g_board_info+0x6e
                  |L1.108|
                          DCD      0x05fa0004
                  |L1.112|
                          DCD      0xe000ed0c

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  g_nordic_nrf52
000000  3602              DCW      0x3602
000002  0200              DCB      0x02,0x00
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      swd_set_target_reset_nrf
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\source\\family\\nordic\\target_reset_nrf52.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_target_reset_nrf52_c_ae8734da____REV16|
#line 480 "..\\..\\..\\source\\cmsis-core\\cmsis_armcc.h"
|__asm___20_target_reset_nrf52_c_ae8734da____REV16| PROC
#line 481

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_target_reset_nrf52_c_ae8734da____REVSH|
#line 495
|__asm___20_target_reset_nrf52_c_ae8734da____REVSH| PROC
#line 496

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___20_target_reset_nrf52_c_ae8734da____RRX|
#line 682
|__asm___20_target_reset_nrf52_c_ae8734da____RRX| PROC
#line 683

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

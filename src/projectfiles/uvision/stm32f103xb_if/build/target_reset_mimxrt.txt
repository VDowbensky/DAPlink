; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\target_reset_mimxrt.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\target_reset_mimxrt.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\target_reset_mimxrt.crf ..\..\..\source\family\freescale\target_reset_mimxrt.c]
                          THUMB

                          AREA ||i.prerun_target_config||, CODE, READONLY, ALIGN=1

                  prerun_target_config PROC
;;;38     
;;;39     static void prerun_target_config(void)
000000  2002              MOVS     r0,#2
;;;40     {
;;;41         // In some case the CPU will enter "cannot debug" state (low power, SWD pin mux changed, etc.).
;;;42         // Doing a hardware reset will clear those states (probably, depends on app). Also, if the
;;;43         // external flash's data is not a valid bootable image, DAPLink cannot attached to target. A
;;;44         // hardware reset will increase the chance to connect in this situation.
;;;45         target_set_state(RESET_RUN);
000002  f7ffbffe          B.W      target_set_state
;;;46     }
;;;47     
                          ENDP


                          AREA ||i.target_before_init_debug||, CODE, READONLY, ALIGN=1

                  target_before_init_debug PROC
;;;26     
;;;27     static void target_before_init_debug(void)
000000  b510              PUSH     {r4,lr}
;;;28     {
;;;29         // This is for the hardware conflict (the EVK are not consider >2 debugger connection
;;;30         // situation) with another external debugger(such as JLINK). Before drag&pull, issue a
;;;31         // hardware reset to bring the platform to a known state and also force
;;;32         // RESET pin to high state ensure a successfully access.
;;;33         swd_set_target_reset(1);
000002  2001              MOVS     r0,#1
000004  f7fffffe          BL       swd_set_target_reset
;;;34         osDelay(5);
000008  2005              MOVS     r0,#5
00000a  f7fffffe          BL       osDelay
;;;35         swd_set_target_reset(0);
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       swd_set_target_reset
;;;36         osDelay(5);
000014  e8bd4010          POP      {r4,lr}
000018  2005              MOVS     r0,#5
00001a  f7ffbffe          B.W      osDelay
;;;37     }
;;;38     
                          ENDP


                          AREA ||i.validate_bin_nvic||, CODE, READONLY, ALIGN=1

                  validate_bin_nvic PROC
;;;47     
;;;48     static uint8_t validate_bin_nvic(const uint8_t *buf)
000000  7801              LDRB     r1,[r0,#0]
;;;49     {
;;;50         if(buf[0] == 'F' && buf[1] == 'C' && buf[2] == 'F' && buf[3] == 'B')
000002  2946              CMP      r1,#0x46
000004  d108              BNE      |L3.24|
000006  7841              LDRB     r1,[r0,#1]
000008  2943              CMP      r1,#0x43
00000a  d105              BNE      |L3.24|
00000c  7881              LDRB     r1,[r0,#2]
00000e  2946              CMP      r1,#0x46
000010  d102              BNE      |L3.24|
000012  78c0              LDRB     r0,[r0,#3]
000014  2842              CMP      r0,#0x42
000016  d001              BEQ      |L3.28|
                  |L3.24|
;;;51         {
;;;52             return 1;
;;;53         }
;;;54         else
;;;55         {
;;;56             return 0;
000018  2000              MOVS     r0,#0
;;;57         }
;;;58     }
00001a  4770              BX       lr
                  |L3.28|
00001c  2001              MOVS     r0,#1                 ;52
00001e  4770              BX       lr
;;;59     
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  g_nxp_mimxrt
000000  0b03              DCW      0x0b03
000002  0200              DCB      0x02,0x00
                          DCD      0x00000001
                          DCD      target_before_init_debug
                          DCD      prerun_target_config
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      validate_bin_nvic
                          DCD      0x00000000
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\source\\family\\freescale\\target_reset_mimxrt.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___21_target_reset_mimxrt_c_c8468615____REV16|
#line 480 "..\\..\\..\\source\\cmsis-core\\cmsis_armcc.h"
|__asm___21_target_reset_mimxrt_c_c8468615____REV16| PROC
#line 481

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___21_target_reset_mimxrt_c_c8468615____REVSH|
#line 495
|__asm___21_target_reset_mimxrt_c_c8468615____REVSH| PROC
#line 496

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___21_target_reset_mimxrt_c_c8468615____RRX|
#line 682
|__asm___21_target_reset_mimxrt_c_c8468615____RRX| PROC
#line 683

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

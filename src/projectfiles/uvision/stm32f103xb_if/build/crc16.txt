; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\crc16.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\crc16.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\crc16.crf ..\..\..\source\daplink\crc16.c]
                          THUMB

                          AREA ||i.crc16||, CODE, READONLY, ALIGN=1

                  crc16 PROC
;;;108    uint16_t
;;;109    crc16(const void *data, int nBytes)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;110    {
;;;111        crc            remainder = INITIAL_REMAINDER;
000004  2400              MOVS     r4,#0
000006  460f              MOV      r7,r1                 ;110
000008  4606              MOV      r6,r0                 ;110
;;;112        int            byte;
;;;113        unsigned char  bit;
;;;114        unsigned char const *message = data;
;;;115    
;;;116        /*
;;;117         * Perform modulo-2 division, a byte at a time.
;;;118         */
;;;119        for (byte = 0; byte < nBytes; ++byte) {
00000a  4625              MOV      r5,r4
;;;120            /*
;;;121             * Bring the next byte into the remainder.
;;;122             */
;;;123            remainder ^= (REFLECT_DATA(message[byte]) << (WIDTH - 8));
;;;124    
;;;125            /*
;;;126             * Perform modulo-2 division, a bit at a time.
;;;127             */
;;;128            for (bit = 8; bit > 0; --bit) {
;;;129                /*
;;;130                 * Try to divide the current data bit.
;;;131                 */
;;;132                if (remainder & TOPBIT) {
;;;133                    remainder = (remainder << 1) ^ POLYNOMIAL;
00000c  f2480805          MOV      r8,#0x8005
;;;134                } else {
;;;135                    remainder = (remainder << 1);
000010  f64f79ff          MOV      r9,#0xffff
000014  e016              B        |L1.68|
                  |L1.22|
000016  5d70              LDRB     r0,[r6,r5]            ;123
000018  2108              MOVS     r1,#8                 ;123
00001a  f7fffffe          BL       reflect
00001e  b2c0              UXTB     r0,r0                 ;123
000020  ea842400          EOR      r4,r4,r0,LSL #8       ;123
000024  2008              MOVS     r0,#8                 ;128
000026  4641              MOV      r1,r8                 ;133
000028  464a              MOV      r2,r9
                  |L1.42|
00002a  0423              LSLS     r3,r4,#16             ;132
00002c  d503              BPL      |L1.54|
00002e  ea810344          EOR      r3,r1,r4,LSL #1       ;133
000032  b29c              UXTH     r4,r3                 ;133
000034  e001              B        |L1.58|
                  |L1.54|
000036  ea020444          AND      r4,r2,r4,LSL #1
                  |L1.58|
00003a  1e40              SUBS     r0,r0,#1
00003c  f01000ff          ANDS     r0,r0,#0xff           ;128
000040  d1f3              BNE      |L1.42|
000042  1c6d              ADDS     r5,r5,#1              ;128
                  |L1.68|
000044  42bd              CMP      r5,r7                 ;119
000046  dbe6              BLT      |L1.22|
;;;136                }
;;;137            }
;;;138        }
;;;139    
;;;140        /*
;;;141         * The final remainder is the CRC result.
;;;142         */
;;;143        return (REFLECT_REMAINDER(remainder) ^ FINAL_XOR_VALUE);
000048  2110              MOVS     r1,#0x10
00004a  4620              MOV      r0,r4
00004c  f7fffffe          BL       reflect
000050  b280              UXTH     r0,r0
;;;144    }   /* crcSlow() */
000052  e8bd87f0          POP      {r4-r10,pc}
                          ENDP


                          AREA ||i.reflect||, CODE, READONLY, ALIGN=1

                  reflect PROC
;;;73     static unsigned long
;;;74     reflect(unsigned long data, unsigned char nBits)
000000  b570              PUSH     {r4-r6,lr}
;;;75     {
000002  4603              MOV      r3,r0
;;;76         unsigned long  reflection = 0x00000000;
000004  2000              MOVS     r0,#0
;;;77         unsigned char  bit;
;;;78     
;;;79         /*
;;;80          * Reflect the data about the center bit.
;;;81          */
;;;82         for (bit = 0; bit < nBits; ++bit) {
000006  4602              MOV      r2,r0
;;;83             /*
;;;84              * If the LSB bit is set, set the reflection of it.
;;;85              */
;;;86             if (data & 0x01) {
;;;87                 reflection |= (1 << ((nBits - 1) - bit));
000008  2601              MOVS     r6,#1
00000a  e009              B        |L2.32|
                  |L2.12|
00000c  07dc              LSLS     r4,r3,#31             ;86
00000e  d004              BEQ      |L2.26|
000010  1a8d              SUBS     r5,r1,r2
000012  1e6d              SUBS     r5,r5,#1
000014  fa06f405          LSL      r4,r6,r5
000018  4320              ORRS     r0,r0,r4
                  |L2.26|
;;;88             }
;;;89     
;;;90             data = (data >> 1);
00001a  085b              LSRS     r3,r3,#1
00001c  1c52              ADDS     r2,r2,#1
00001e  b2d2              UXTB     r2,r2                 ;82
                  |L2.32|
000020  428a              CMP      r2,r1                 ;82
000022  d3f3              BCC      |L2.12|
;;;91         }
;;;92     
;;;93         return (reflection);
;;;94     }	/* reflect() */
000024  bd70              POP      {r4-r6,pc}
;;;95     
                          ENDP


; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\usbd_hid.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\usbd_hid.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\usbd_hid.crf ..\..\..\source\usb\hid\usbd_hid.c]
                          THUMB

                          AREA ||i.USBD_HID_Configure_Event||, CODE, READONLY, ALIGN=2

                  USBD_HID_Configure_Event PROC
;;;333    
;;;334    void USBD_HID_Configure_Event(void)
000000  4807              LDR      r0,|L1.32|
;;;335    {
;;;336        /* Reset all variables after connect event */
;;;337        USBD_HID_Protocol         = 0;
000002  2100              MOVS     r1,#0
000004  7041              STRB     r1,[r0,#1]
;;;338        DataOutAsyncReq           = __FALSE;
;;;339        DataOutUpdateReqMask      = __FALSE;
000006  60c1              STR      r1,[r0,#0xc]  ; DataOutAsyncReq
;;;340        ptrDataOut                = NULL;
000008  6101              STR      r1,[r0,#0x10]  ; DataOutUpdateReqMask
;;;341        DataOutToSendLen          = 0;
00000a  6141              STR      r1,[r0,#0x14]  ; ptrDataOut
00000c  8041              STRH     r1,[r0,#2]
;;;342        DataOutSentLen            = 0;
00000e  8081              STRH     r1,[r0,#4]
;;;343        DataOutEndWithShortPacket = __FALSE;
;;;344        ptrDataIn                 = NULL;
000010  6181              STR      r1,[r0,#0x18]  ; DataOutEndWithShortPacket
;;;345        DataInReceMax             = 0;
000012  61c1              STR      r1,[r0,#0x1c]  ; ptrDataIn
000014  80c1              STRH     r1,[r0,#6]
;;;346        DataInReceLen             = 0;
000016  8101              STRH     r1,[r0,#8]
;;;347        ptrDataFeat               = NULL;
;;;348        DataFeatReceLen           = 0;
000018  6201              STR      r1,[r0,#0x20]  ; ptrDataFeat
00001a  8141              STRH     r1,[r0,#0xa]
;;;349    }
00001c  4770              BX       lr
;;;350    
                          ENDP

00001e  0000              DCW      0x0000
                  |L1.32|
                          DCD      ||.data||

                          AREA ||i.USBD_HID_EP_INTIN_Event||, CODE, READONLY, ALIGN=2

                  USBD_HID_EP_INTIN_Event PROC
;;;202    
;;;203    void USBD_HID_EP_INTIN_Event(U32 event)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;204    {
;;;205        U8  i;
;;;206        U16 bytes_to_send;
;;;207    
;;;208        /* Check if sending is finished                                             */
;;;209        if ((DataOutSentLen >= DataOutToSendLen) &&
000004  4e49              LDR      r6,|L2.300|
000006  88b0              LDRH     r0,[r6,#4]  ; DataOutSentLen
000008  8871              LDRH     r1,[r6,#2]  ; DataOutToSendLen
;;;210                !DataOutEndWithShortPacket) {     /* If all sent and short packet also  */
;;;211            ptrDataOut          = NULL;
;;;212            DataOutSentLen      = 0;
;;;213            DataOutToSendLen    = usbd_hid_get_report(HID_REPORT_INPUT, USBD_HID_InReport[0], &USBD_HID_InReport[1], USBD_HID_REQ_EP_INT);
00000a  4f4a              LDR      r7,|L2.308|
;;;214    
;;;215            if (DataOutToSendLen) {             /* If new send should be started      */
;;;216                ptrDataOut        = USBD_HID_InReport;
;;;217    
;;;218                if (usbd_hid_inreport_num <= 1) { /* If only in 1 report skip ReportID  */
00000c  f8df8120          LDR      r8,|L2.304|
000010  1c7d              ADDS     r5,r7,#1              ;213
000012  2400              MOVS     r4,#0                 ;213
000014  4288              CMP      r0,r1                 ;209
000016  d316              BCC      |L2.70|
000018  69b0              LDR      r0,[r6,#0x18]         ;210  ; DataOutEndWithShortPacket
00001a  b9a0              CBNZ     r0,|L2.70|
00001c  6174              STR      r4,[r6,#0x14]         ;212  ; ptrDataOut
00001e  80b4              STRH     r4,[r6,#4]            ;212
000020  2301              MOVS     r3,#1                 ;213
000022  7839              LDRB     r1,[r7,#0]            ;213  ; USBD_HID_InReport
000024  1c7a              ADDS     r2,r7,#1              ;213
000026  4618              MOV      r0,r3                 ;213
000028  f7fffffe          BL       usbd_hid_get_report
00002c  8070              STRH     r0,[r6,#2]            ;213
00002e  8870              LDRH     r0,[r6,#2]            ;215  ; DataOutToSendLen
000030  b148              CBZ      r0,|L2.70|
000032  6177              STR      r7,[r6,#0x14]  ; ptrDataOut
000034  f8980000          LDRB     r0,[r8,#0]  ; usbd_hid_inreport_num
000038  2801              CMP      r0,#1
00003a  d801              BHI      |L2.64|
;;;219                    ptrDataOut++;
00003c  6175              STR      r5,[r6,#0x14]  ; ptrDataOut
00003e  e002              B        |L2.70|
                  |L2.64|
;;;220                } else {                          /* If more in reports, send ReportID  */
;;;221                    DataOutToSendLen++;
000040  8870              LDRH     r0,[r6,#2]  ; DataOutToSendLen
000042  1c40              ADDS     r0,r0,#1
000044  8070              STRH     r0,[r6,#2]
                  |L2.70|
;;;222                }
;;;223            }
;;;224        }
;;;225    
;;;226        /* Check if new data out sending should be started                          */
;;;227        if (!DataOutToSendLen) {              /* If send not in progress            */
000046  8870              LDRH     r0,[r6,#2]  ; DataOutToSendLen
000048  f04f0901          MOV      r9,#1                 ;213
00004c  bbb0              CBNZ     r0,|L2.188|
;;;228            if (DataOutAsyncReq) {              /* If asynchronous send requested     */
00004e  68f0              LDR      r0,[r6,#0xc]  ; DataOutAsyncReq
000050  b108              CBZ      r0,|L2.86|
;;;229                DataOutAsyncReq = __FALSE;
000052  60f4              STR      r4,[r6,#0xc]  ; DataOutAsyncReq
000054  e032              B        |L2.188|
                  |L2.86|
;;;230            } else if (DataOutUpdateReqMask) {  /* If update requested                */
000056  6931              LDR      r1,[r6,#0x10]  ; DataOutUpdateReqMask
000058  b381              CBZ      r1,|L2.188|
;;;231                if (usbd_hid_inreport_num <= 1) { /* If only one in report in system    */
00005a  f8980000          LDRB     r0,[r8,#0]  ; usbd_hid_inreport_num
00005e  2801              CMP      r0,#1
000060  d80d              BHI      |L2.126|
;;;232                    if (DataOutUpdateReqMask) {
;;;233                        USBD_HID_InReport[0]  = 0;    /* ReportID = 0                       */
000062  703c              STRB     r4,[r7,#0]
;;;234                        DataOutSentLen        = 0;
000064  80b4              STRH     r4,[r6,#4]
;;;235                        DataOutToSendLen      = usbd_hid_get_report(HID_REPORT_INPUT, 0, &USBD_HID_InReport[1], USBD_HID_REQ_PERIOD_UPDATE);
000066  2302              MOVS     r3,#2
000068  1c7a              ADDS     r2,r7,#1
00006a  2100              MOVS     r1,#0
00006c  2001              MOVS     r0,#1
00006e  f7fffffe          BL       usbd_hid_get_report
000072  8070              STRH     r0,[r6,#2]
;;;236    
;;;237                        if (DataOutToSendLen) {
000074  8870              LDRH     r0,[r6,#2]  ; DataOutToSendLen
000076  b100              CBZ      r0,|L2.122|
;;;238                            ptrDataOut          = &USBD_HID_InReport[1];
000078  6175              STR      r5,[r6,#0x14]  ; ptrDataOut
                  |L2.122|
;;;239                        }
;;;240    
;;;241                        DataOutUpdateReqMask  = 0;
00007a  6134              STR      r4,[r6,#0x10]  ; DataOutUpdateReqMask
00007c  e01e              B        |L2.188|
                  |L2.126|
;;;242                    }
;;;243                } else {                          /* If multiple reports in system      */
;;;244                    for (i = USBD_HID_InReport[0]; ; i++) {
00007e  783d              LDRB     r5,[r7,#0]  ; USBD_HID_InReport
000080  46c8              MOV      r8,r9                 ;213
                  |L2.130|
;;;245                        if (i >= 32) {
000082  2d20              CMP      r5,#0x20
000084  d300              BCC      |L2.136|
;;;246                            i = 0;
000086  2500              MOVS     r5,#0
                  |L2.136|
;;;247                        }
;;;248    
;;;249                        if (DataOutUpdateReqMask & (1 << i)) {
000088  fa08f005          LSL      r0,r8,r5
00008c  4208              TST      r0,r1
00008e  d018              BEQ      |L2.194|
;;;250                            USBD_HID_InReport[0] = i + 1; /* ReportID                           */
000090  1c68              ADDS     r0,r5,#1
000092  b2c1              UXTB     r1,r0
000094  7039              STRB     r1,[r7,#0]
;;;251                            DataOutSentLen      = 0;
000096  80b4              STRH     r4,[r6,#4]
;;;252                            DataOutToSendLen    = usbd_hid_get_report(HID_REPORT_INPUT, i + 1, &USBD_HID_InReport[1], USBD_HID_REQ_PERIOD_UPDATE);
000098  2302              MOVS     r3,#2
00009a  1c7a              ADDS     r2,r7,#1
00009c  2001              MOVS     r0,#1
00009e  f7fffffe          BL       usbd_hid_get_report
0000a2  8070              STRH     r0,[r6,#2]
;;;253    
;;;254                            if (DataOutToSendLen) {
0000a4  8870              LDRH     r0,[r6,#2]  ; DataOutToSendLen
0000a6  b118              CBZ      r0,|L2.176|
;;;255                                ptrDataOut        = USBD_HID_InReport;
;;;256                                DataOutToSendLen++;
0000a8  6177              STR      r7,[r6,#0x14]  ; ptrDataOut
0000aa  8870              LDRH     r0,[r6,#2]  ; DataOutToSendLen
0000ac  1c40              ADDS     r0,r0,#1
0000ae  8070              STRH     r0,[r6,#2]
                  |L2.176|
;;;257                            }
;;;258    
;;;259                            DataOutUpdateReqMask &= ~(1 << i);
0000b0  6930              LDR      r0,[r6,#0x10]  ; DataOutUpdateReqMask
0000b2  fa08f805          LSL      r8,r8,r5
0000b6  ea200008          BIC      r0,r0,r8
0000ba  6130              STR      r0,[r6,#0x10]  ; DataOutUpdateReqMask
                  |L2.188|
;;;260                            break;
;;;261                        }
;;;262                    }
;;;263                }
;;;264            }
;;;265        }
;;;266    
;;;267        /* Check if data needs to be sent                                           */
;;;268        if (DataOutToSendLen ||
0000bc  8870              LDRH     r0,[r6,#2]  ; DataOutToSendLen
0000be  b930              CBNZ     r0,|L2.206|
0000c0  e002              B        |L2.200|
                  |L2.194|
0000c2  1c6d              ADDS     r5,r5,#1
0000c4  b2ed              UXTB     r5,r5                 ;244
0000c6  e7dc              B        |L2.130|
                  |L2.200|
;;;269                DataOutEndWithShortPacket) {     /* If sending is in progress          */
0000c8  69b0              LDR      r0,[r6,#0x18]  ; DataOutEndWithShortPacket
0000ca  2800              CMP      r0,#0
0000cc  d029              BEQ      |L2.290|
                  |L2.206|
;;;270            bytes_to_send = DataOutToSendLen - DataOutSentLen;
0000ce  8870              LDRH     r0,[r6,#2]  ; DataOutToSendLen
0000d0  88b1              LDRH     r1,[r6,#4]  ; DataOutSentLen
;;;271    
;;;272            if (bytes_to_send > usbd_hid_maxpacketsize[USBD_HighSpeed]) {
0000d2  f8df8068          LDR      r8,|L2.316|
0000d6  1a40              SUBS     r0,r0,r1              ;270
0000d8  b285              UXTH     r5,r0                 ;270
0000da  4f17              LDR      r7,|L2.312|
0000dc  f8980000          LDRB     r0,[r8,#0]  ; USBD_HighSpeed
0000e0  f8370010          LDRH     r0,[r7,r0,LSL #1]
0000e4  42a8              CMP      r0,r5
0000e6  d200              BCS      |L2.234|
;;;273                bytes_to_send = usbd_hid_maxpacketsize[USBD_HighSpeed];
0000e8  4605              MOV      r5,r0
                  |L2.234|
;;;274            }
;;;275    
;;;276            if (usbd_hid_ep_intin != 0) { //control ep does the sending to host
0000ea  4815              LDR      r0,|L2.320|
0000ec  7800              LDRB     r0,[r0,#0]  ; usbd_hid_ep_intin
0000ee  b128              CBZ      r0,|L2.252|
;;;277                USBD_WriteEP(usbd_hid_ep_intin | 0x80, ptrDataOut, bytes_to_send);
0000f0  f0400080          ORR      r0,r0,#0x80
0000f4  462a              MOV      r2,r5
0000f6  6971              LDR      r1,[r6,#0x14]  ; ptrDataOut
0000f8  f7fffffe          BL       USBD_WriteEP
                  |L2.252|
;;;278            }
;;;279    
;;;280            ptrDataOut     += bytes_to_send;
0000fc  6970              LDR      r0,[r6,#0x14]  ; ptrDataOut
;;;281            DataOutSentLen += bytes_to_send;
;;;282    
;;;283            if ((DataOutSentLen < usbd_hid_inreport_max_sz) &&
0000fe  4911              LDR      r1,|L2.324|
000100  4428              ADD      r0,r0,r5              ;280
000102  6170              STR      r0,[r6,#0x14]         ;281  ; ptrDataOut
000104  88b0              LDRH     r0,[r6,#4]            ;281  ; DataOutSentLen
000106  4428              ADD      r0,r0,r5              ;281
000108  b280              UXTH     r0,r0                 ;281
00010a  80b0              STRH     r0,[r6,#4]            ;281
00010c  8809              LDRH     r1,[r1,#0]  ; usbd_hid_inreport_max_sz
00010e  4288              CMP      r0,r1
000110  d209              BCS      |L2.294|
;;;284                    (bytes_to_send == usbd_hid_maxpacketsize[USBD_HighSpeed])) {
000112  f8980000          LDRB     r0,[r8,#0]  ; USBD_HighSpeed
000116  f8370010          LDRH     r0,[r7,r0,LSL #1]
00011a  42a8              CMP      r0,r5
00011c  d103              BNE      |L2.294|
;;;285                /* If short packet should be sent also*/
;;;286                DataOutEndWithShortPacket = __TRUE;
00011e  f8c69018          STR      r9,[r6,#0x18]  ; DataOutEndWithShortPacket
                  |L2.290|
;;;287            } else {
;;;288                DataOutEndWithShortPacket = __FALSE;
;;;289            }
;;;290        }
;;;291    }
000122  e8bd87f0          POP      {r4-r10,pc}
                  |L2.294|
000126  61b4              STR      r4,[r6,#0x18]         ;288  ; DataOutEndWithShortPacket
000128  e7fb              B        |L2.290|
;;;292    
                          ENDP

00012a  0000              DCW      0x0000
                  |L2.300|
                          DCD      ||.data||
                  |L2.304|
                          DCD      usbd_hid_inreport_num
                  |L2.308|
                          DCD      USBD_HID_InReport
                  |L2.312|
                          DCD      usbd_hid_maxpacketsize
                  |L2.316|
                          DCD      USBD_HighSpeed
                  |L2.320|
                          DCD      usbd_hid_ep_intin
                  |L2.324|
                          DCD      usbd_hid_inreport_max_sz

                          AREA ||i.USBD_HID_EP_INTOUT_Event||, CODE, READONLY, ALIGN=2

                  USBD_HID_EP_INTOUT_Event PROC
;;;299    
;;;300    void USBD_HID_EP_INTOUT_Event(U32 event)
000000  b5f8              PUSH     {r3-r7,lr}
;;;301    {
;;;302        U16 bytes_rece;
;;;303    
;;;304        if (!DataInReceLen) {                 /* Check if new reception             */
000002  4c1c              LDR      r4,|L3.116|
;;;305            ptrDataIn     = USBD_HID_OutReport;
000004  4d1c              LDR      r5,|L3.120|
;;;306            DataInReceMax = usbd_hid_outreport_max_sz;
000006  4f1d              LDR      r7,|L3.124|
000008  8920              LDRH     r0,[r4,#8]            ;304  ; DataInReceLen
00000a  2600              MOVS     r6,#0                 ;304
00000c  b918              CBNZ     r0,|L3.22|
00000e  61e5              STR      r5,[r4,#0x1c]  ; ptrDataIn
000010  8838              LDRH     r0,[r7,#0]  ; usbd_hid_outreport_max_sz
000012  80e0              STRH     r0,[r4,#6]
;;;307            DataInReceLen = 0;
000014  8126              STRH     r6,[r4,#8]
                  |L3.22|
;;;308        }
;;;309    
;;;310        bytes_rece      = USBD_ReadEP(usbd_hid_ep_intout, ptrDataIn, DataInReceMax - DataInReceLen);
000016  88e0              LDRH     r0,[r4,#6]  ; DataInReceMax
000018  8921              LDRH     r1,[r4,#8]  ; DataInReceLen
00001a  1a42              SUBS     r2,r0,r1
00001c  4818              LDR      r0,|L3.128|
00001e  69e1              LDR      r1,[r4,#0x1c]  ; ptrDataIn
000020  7800              LDRB     r0,[r0,#0]  ; usbd_hid_ep_intout
000022  f7fffffe          BL       USBD_ReadEP
000026  0400              LSLS     r0,r0,#16
;;;311        ptrDataIn      += bytes_rece;
000028  69e1              LDR      r1,[r4,#0x1c]  ; ptrDataIn
00002a  0c00              LSRS     r0,r0,#16             ;310
00002c  4401              ADD      r1,r1,r0
;;;312        DataInReceLen  += bytes_rece;
00002e  61e1              STR      r1,[r4,#0x1c]  ; ptrDataIn
000030  8921              LDRH     r1,[r4,#8]  ; DataInReceLen
000032  4401              ADD      r1,r1,r0
000034  b28b              UXTH     r3,r1
000036  8123              STRH     r3,[r4,#8]
;;;313    
;;;314        if (!bytes_rece ||
000038  d009              BEQ      |L3.78|
;;;315                (DataInReceLen >= usbd_hid_outreport_max_sz) ||
00003a  8839              LDRH     r1,[r7,#0]  ; usbd_hid_outreport_max_sz
00003c  428b              CMP      r3,r1
00003e  d206              BCS      |L3.78|
;;;316                (bytes_rece    <  usbd_hid_maxpacketsize[USBD_HighSpeed])) {
000040  4a11              LDR      r2,|L3.136|
000042  4910              LDR      r1,|L3.132|
000044  7812              LDRB     r2,[r2,#0]  ; USBD_HighSpeed
000046  f8311012          LDRH     r1,[r1,r2,LSL #1]
00004a  4281              CMP      r1,r0
00004c  d910              BLS      |L3.112|
                  |L3.78|
;;;317            if (usbd_hid_outreport_num <= 1) {  /* If only one out report in system   */
00004e  480f              LDR      r0,|L3.140|
000050  7801              LDRB     r1,[r0,#0]  ; usbd_hid_outreport_num
;;;318                usbd_hid_set_report(HID_REPORT_OUTPUT,                    0 ,  USBD_HID_OutReport   , DataInReceLen,   USBD_HID_REQ_EP_INT);
000052  2001              MOVS     r0,#1
000054  2901              CMP      r1,#1                 ;317
000056  9000              STR      r0,[sp,#0]            ;317
000058  d803              BHI      |L3.98|
00005a  2100              MOVS     r1,#0
00005c  4a06              LDR      r2,|L3.120|
00005e  2002              MOVS     r0,#2
000060  e003              B        |L3.106|
                  |L3.98|
;;;319            } else {
;;;320                usbd_hid_set_report(HID_REPORT_OUTPUT, USBD_HID_OutReport[0], &USBD_HID_OutReport[1], DataInReceLen - 1, USBD_HID_REQ_EP_INT);
000062  7829              LDRB     r1,[r5,#0]  ; USBD_HID_OutReport
000064  1c6a              ADDS     r2,r5,#1
000066  2002              MOVS     r0,#2
000068  1e5b              SUBS     r3,r3,#1
                  |L3.106|
00006a  f7fffffe          BL       usbd_hid_set_report
;;;321            }
;;;322    
;;;323            DataInReceLen = 0;
00006e  8126              STRH     r6,[r4,#8]
                  |L3.112|
;;;324        }
;;;325    }
000070  bdf8              POP      {r3-r7,pc}
;;;326    
                          ENDP

000072  0000              DCW      0x0000
                  |L3.116|
                          DCD      ||.data||
                  |L3.120|
                          DCD      USBD_HID_OutReport
                  |L3.124|
                          DCD      usbd_hid_outreport_max_sz
                  |L3.128|
                          DCD      usbd_hid_ep_intout
                  |L3.132|
                          DCD      usbd_hid_maxpacketsize
                  |L3.136|
                          DCD      USBD_HighSpeed
                  |L3.140|
                          DCD      usbd_hid_outreport_num

                          AREA ||i.USBD_HID_EP_INT_Event||, CODE, READONLY, ALIGN=1

                  USBD_HID_EP_INT_Event PROC
;;;359    
;;;360    void USBD_HID_EP_INT_Event(U32 event)
000000  b510              PUSH     {r4,lr}
;;;361    {
000002  4604              MOV      r4,r0
;;;362        if (event & USBD_EVT_IN) {
000004  0700              LSLS     r0,r0,#28
000006  d502              BPL      |L4.14|
;;;363            USBD_HID_EP_INTIN_Event(event);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       USBD_HID_EP_INTIN_Event
                  |L4.14|
;;;364        }
;;;365    
;;;366        if (event & USBD_EVT_OUT) {
00000e  0760              LSLS     r0,r4,#29
000010  d504              BPL      |L4.28|
;;;367            USBD_HID_EP_INTOUT_Event(event);
000012  4620              MOV      r0,r4
000014  e8bd4010          POP      {r4,lr}
000018  f7ffbffe          B.W      USBD_HID_EP_INTOUT_Event
                  |L4.28|
;;;368        }
;;;369    }
00001c  bd10              POP      {r4,pc}
;;;370    
                          ENDP


                          AREA ||i.USBD_HID_GetIdle||, CODE, READONLY, ALIGN=2

                  USBD_HID_GetIdle PROC
;;;138    
;;;139    BOOL USBD_HID_GetIdle(void)
000000  4803              LDR      r0,|L5.16|
;;;140    {
;;;141        USBD_EP0Buf[0] = USBD_HID_IdleSet[USBD_SetupPacket.wValueL];
000002  4904              LDR      r1,|L5.20|
000004  7880              LDRB     r0,[r0,#2]  ; USBD_SetupPacket
000006  5c08              LDRB     r0,[r1,r0]
000008  4903              LDR      r1,|L5.24|
00000a  7008              STRB     r0,[r1,#0]
;;;142        return (__TRUE);
00000c  2001              MOVS     r0,#1
;;;143    }
00000e  4770              BX       lr
;;;144    
                          ENDP

                  |L5.16|
                          DCD      USBD_SetupPacket
                  |L5.20|
                          DCD      USBD_HID_IdleSet
                  |L5.24|
                          DCD      USBD_EP0Buf

                          AREA ||i.USBD_HID_GetProtocol||, CODE, READONLY, ALIGN=2

                  USBD_HID_GetProtocol PROC
;;;175    
;;;176    BOOL USBD_HID_GetProtocol(void)
000000  b510              PUSH     {r4,lr}
;;;177    {
;;;178        USBD_EP0Buf[0] = usbd_hid_get_protocol();
000002  f7fffffe          BL       usbd_hid_get_protocol
000006  4902              LDR      r1,|L6.16|
000008  7008              STRB     r0,[r1,#0]
;;;179        return (__TRUE);
00000a  2001              MOVS     r0,#1
;;;180    }
00000c  bd10              POP      {r4,pc}
;;;181    
                          ENDP

00000e  0000              DCW      0x0000
                  |L6.16|
                          DCD      USBD_EP0Buf

                          AREA ||i.USBD_HID_GetReport||, CODE, READONLY, ALIGN=2

                  USBD_HID_GetReport PROC
;;;74     
;;;75     BOOL USBD_HID_GetReport(void)
000000  490b              LDR      r1,|L7.48|
;;;76     {
000002  b510              PUSH     {r4,lr}
;;;77         U8 *ptr_buf = 0;
;;;78     
;;;79         /* Report Type   = USBD_SetupPacket.wValueH */
;;;80         /* Report ID     = USBD_SetupPacket.wValueL */
;;;81         /* Report Length = USBD_SetupPacket.wLength */
;;;82         switch (USBD_SetupPacket.wValueH) {
000004  78c8              LDRB     r0,[r1,#3]  ; USBD_SetupPacket
000006  2200              MOVS     r2,#0                 ;77
000008  2801              CMP      r0,#1
00000a  d004              BEQ      |L7.22|
00000c  2802              CMP      r0,#2
00000e  d004              BEQ      |L7.26|
000010  2803              CMP      r0,#3
000012  d106              BNE      |L7.34|
000014  e003              B        |L7.30|
                  |L7.22|
;;;83             case HID_REPORT_INPUT:
;;;84                 ptr_buf  = &USBD_HID_InReport[1];
000016  4a07              LDR      r2,|L7.52|
;;;85                 break;
000018  e002              B        |L7.32|
                  |L7.26|
;;;86     
;;;87             case HID_REPORT_OUTPUT:
;;;88                 return (__FALSE);        /* Not Supported */
00001a  2000              MOVS     r0,#0
;;;89     
;;;90             case HID_REPORT_FEATURE:
;;;91                 ptr_buf  = &USBD_HID_FeatReport[1];
;;;92                 break;
;;;93         }
;;;94     
;;;95         usbd_hid_get_report(USBD_SetupPacket.wValueH, USBD_SetupPacket.wValueL, ptr_buf, USBD_HID_REQ_EP_CTRL);
;;;96         return (__TRUE);
;;;97     }
00001c  bd10              POP      {r4,pc}
                  |L7.30|
00001e  4a06              LDR      r2,|L7.56|
                  |L7.32|
000020  1c52              ADDS     r2,r2,#1              ;91
                  |L7.34|
000022  7889              LDRB     r1,[r1,#2]            ;95  ; USBD_SetupPacket
000024  2300              MOVS     r3,#0                 ;95
000026  f7fffffe          BL       usbd_hid_get_report
00002a  2001              MOVS     r0,#1                 ;96
00002c  bd10              POP      {r4,pc}
;;;98     
                          ENDP

00002e  0000              DCW      0x0000
                  |L7.48|
                          DCD      USBD_SetupPacket
                  |L7.52|
                          DCD      USBD_HID_InReport
                  |L7.56|
                          DCD      USBD_HID_FeatReport

                          AREA ||i.USBD_HID_SOF_Event||, CODE, READONLY, ALIGN=2

                  USBD_HID_SOF_Event PROC
;;;378    
;;;379    void USBD_HID_SOF_Event(void)
000000  e92d5ffc          PUSH     {r2-r12,lr}
;;;380    {
;;;381        static U8   cnt_for_4ms = 0;
;;;382        U8   i;
;;;383        BOOL tick_4ms, do_polling, polling_reload, idle_reload;
;;;384    
;;;385        if (USBD_Configuration) {
000004  4845              LDR      r0,|L8.284|
000006  7800              LDRB     r0,[r0,#0]  ; USBD_Configuration
000008  2800              CMP      r0,#0                 ;380
00000a  d07d              BEQ      |L8.264|
;;;386            tick_4ms = __FALSE;
;;;387    
;;;388            if (cnt_for_4ms++ >= ((4 << (3 * USBD_HighSpeed))) - 1) {
00000c  4d44              LDR      r5,|L8.288|
00000e  2304              MOVS     r3,#4
000010  2600              MOVS     r6,#0                 ;386
000012  7829              LDRB     r1,[r5,#0]  ; cnt_for_4ms
000014  46b1              MOV      r9,r6
000016  1c48              ADDS     r0,r1,#1
000018  7028              STRB     r0,[r5,#0]
00001a  4842              LDR      r0,|L8.292|
00001c  7800              LDRB     r0,[r0,#0]  ; USBD_HighSpeed
00001e  eb000240          ADD      r2,r0,r0,LSL #1
000022  4093              LSLS     r3,r3,r2
000024  1e5b              SUBS     r3,r3,#1
000026  9201              STR      r2,[sp,#4]
000028  4299              CMP      r1,r3
00002a  db02              BLT      |L8.50|
;;;389                cnt_for_4ms = 0;
00002c  f8859000          STRB     r9,[r5,#0]
;;;390                tick_4ms    = __TRUE;
000030  2601              MOVS     r6,#1
                  |L8.50|
;;;391            }
;;;392    
;;;393            polling_reload = __FALSE;
;;;394    
;;;395            if (USBD_HID_PollingCnt < 255) {
000032  4a3d              LDR      r2,|L8.296|
000034  2400              MOVS     r4,#0                 ;393
000036  8811              LDRH     r1,[r2,#0]  ; USBD_HID_PollingCnt
000038  29ff              CMP      r1,#0xff
00003a  d201              BCS      |L8.64|
00003c  1c49              ADDS     r1,r1,#1
;;;396                USBD_HID_PollingCnt++;
00003e  8011              STRH     r1,[r2,#0]
                  |L8.64|
;;;397            }
;;;398    
;;;399            if (USBD_HID_PollingCnt == usbd_hid_interval[USBD_HighSpeed]) {
000040  493a              LDR      r1,|L8.300|
000042  f8310010          LDRH     r0,[r1,r0,LSL #1]
000046  4938              LDR      r1,|L8.296|
000048  9000              STR      r0,[sp,#0]
00004a  8809              LDRH     r1,[r1,#0]  ; USBD_HID_PollingCnt
00004c  4288              CMP      r0,r1
00004e  d100              BNE      |L8.82|
;;;400                polling_reload = __TRUE;          /* If polling interval expired        */
000050  2401              MOVS     r4,#1
                  |L8.82|
;;;401            }
;;;402    
;;;403            for (i = 0; i < usbd_hid_inreport_num; i++) {
000052  4939              LDR      r1,|L8.312|
000054  2000              MOVS     r0,#0
;;;404                idle_reload = __FALSE;
;;;405    
;;;406                if (tick_4ms) {
;;;407                    if (USBD_HID_IdleCnt[i] < 255) {
;;;408                        USBD_HID_IdleCnt[i]++;
;;;409                    }
;;;410    
;;;411                    if (USBD_HID_IdleReload[i]) {
000056  f8df80d8          LDR      r8,|L8.304|
00005a  f04f0b01          MOV      r11,#1                ;390
00005e  f8dfa0d4          LDR      r10,|L8.308|
000062  f891e000          LDRB     lr,[r1,#0]            ;403
000066  e045              B        |L8.244|
                  |L8.104|
000068  2200              MOVS     r2,#0                 ;404
00006a  b176              CBZ      r6,|L8.138|
00006c  f81a1000          LDRB     r1,[r10,r0]           ;407
000070  4653              MOV      r3,r10                ;407
000072  29ff              CMP      r1,#0xff              ;407
000074  d201              BCS      |L8.122|
000076  1c49              ADDS     r1,r1,#1              ;407
000078  5419              STRB     r1,[r3,r0]            ;408
                  |L8.122|
00007a  f8181000          LDRB     r1,[r8,r0]
00007e  b121              CBZ      r1,|L8.138|
;;;412                        if (USBD_HID_IdleCnt[i] >= USBD_HID_IdleReload[i]) {
000080  f81a3000          LDRB     r3,[r10,r0]
000084  428b              CMP      r3,r1
000086  d300              BCC      |L8.138|
;;;413                            idle_reload = __TRUE;       /* If idle period expired             */
000088  2201              MOVS     r2,#1
                  |L8.138|
;;;414                        }
;;;415                    }
;;;416                }
;;;417    
;;;418                do_polling = (usbd_hid_interval[USBD_HighSpeed] > ((U16)(USBD_HID_IdleReload[i]) << (2 << (3 * USBD_HighSpeed)))) && (USBD_HID_IdleReload[i] != 0);
00008a  9901              LDR      r1,[sp,#4]
00008c  f8187000          LDRB     r7,[r8,r0]
000090  2302              MOVS     r3,#2
000092  408b              LSLS     r3,r3,r1
000094  fa07f103          LSL      r1,r7,r3
000098  9b00              LDR      r3,[sp,#0]
00009a  4299              CMP      r1,r3
00009c  da02              BGE      |L8.164|
00009e  b10f              CBZ      r7,|L8.164|
0000a0  2301              MOVS     r3,#1
0000a2  e000              B        |L8.166|
                  |L8.164|
0000a4  2300              MOVS     r3,#0
                  |L8.166|
;;;419    
;;;420                if (polling_reload) {
0000a6  b13c              CBZ      r4,|L8.184|
;;;421                    if (do_polling) {
0000a8  b133              CBZ      r3,|L8.184|
;;;422                        /* If polling is longer than idle     */
;;;423                        DataOutUpdateReqMask |= (1 << i);
0000aa  f8d5c010          LDR      r12,[r5,#0x10]  ; DataOutUpdateReqMask
0000ae  fa0bf100          LSL      r1,r11,r0
0000b2  ea41010c          ORR      r1,r1,r12
0000b6  6129              STR      r1,[r5,#0x10]  ; DataOutUpdateReqMask
                  |L8.184|
;;;424                    }
;;;425                }
;;;426    
;;;427                if (USBD_HID_IdleReload[i] != USBD_HID_IdleSet[i]) {
0000b8  4920              LDR      r1,|L8.316|
0000ba  5c09              LDRB     r1,[r1,r0]
0000bc  428f              CMP      r7,r1
0000be  d00e              BEQ      |L8.222|
;;;428                    if (USBD_HID_IdleCnt[i] >= USBD_HID_IdleSet[i]) {
0000c0  f81a7000          LDRB     r7,[r10,r0]
0000c4  428f              CMP      r7,r1
0000c6  d308              BCC      |L8.218|
;;;429                        DataOutUpdateReqMask |= (1 << i);
0000c8  f8d5c010          LDR      r12,[r5,#0x10]  ; DataOutUpdateReqMask
0000cc  fa0bf700          LSL      r7,r11,r0
0000d0  ea47070c          ORR      r7,r7,r12
;;;430                        cnt_for_4ms = 0;
0000d4  612f              STR      r7,[r5,#0x10]  ; DataOutUpdateReqMask
0000d6  f8859000          STRB     r9,[r5,#0]
                  |L8.218|
;;;431                    }
;;;432    
;;;433                    USBD_HID_IdleReload[i] = USBD_HID_IdleSet[i];
0000da  f8081000          STRB     r1,[r8,r0]
                  |L8.222|
;;;434                }
;;;435    
;;;436                if (idle_reload) {
0000de  b13a              CBZ      r2,|L8.240|
;;;437                    if (!do_polling) {
0000e0  b923              CBNZ     r3,|L8.236|
;;;438                        DataOutUpdateReqMask |= (1 << i);
0000e2  692a              LDR      r2,[r5,#0x10]  ; DataOutUpdateReqMask
0000e4  fa0bf100          LSL      r1,r11,r0
0000e8  4311              ORRS     r1,r1,r2
0000ea  6129              STR      r1,[r5,#0x10]  ; DataOutUpdateReqMask
                  |L8.236|
;;;439                    }
;;;440    
;;;441                    USBD_HID_IdleCnt[i] = 0;
0000ec  f80a9000          STRB     r9,[r10,r0]
                  |L8.240|
0000f0  1c40              ADDS     r0,r0,#1
0000f2  b2c0              UXTB     r0,r0                 ;403
                  |L8.244|
0000f4  4570              CMP      r0,lr                 ;403
0000f6  d3b7              BCC      |L8.104|
;;;442                }
;;;443            }
;;;444    
;;;445            if (polling_reload) {
0000f8  b114              CBZ      r4,|L8.256|
;;;446                USBD_HID_PollingCnt = 0;
0000fa  490b              LDR      r1,|L8.296|
0000fc  f8a19000          STRH     r9,[r1,#0]
                  |L8.256|
;;;447            }
;;;448    
;;;449            if (DataOutUpdateReqMask && !DataOutToSendLen) {        /* If pending     */
000100  6928              LDR      r0,[r5,#0x10]  ; DataOutUpdateReqMask
000102  2800              CMP      r0,#0
000104  d008              BEQ      |L8.280|
000106  e000              B        |L8.266|
                  |L8.264|
000108  e006              B        |L8.280|
                  |L8.266|
00010a  8868              LDRH     r0,[r5,#2]  ; DataOutToSendLen
00010c  2800              CMP      r0,#0
00010e  d103              BNE      |L8.280|
;;;450                /* refresh request and no active data */
;;;451                /* out then start data out            */
;;;452                USBD_HID_EP_INTIN_Event(0);
000110  e8bd5ffc          POP      {r2-r12,lr}
000114  f7ffbffe          B.W      USBD_HID_EP_INTIN_Event
                  |L8.280|
;;;453            }
;;;454        }
;;;455    }
000118  e8bd9ffc          POP      {r2-r12,pc}
;;;456    
                          ENDP

                  |L8.284|
                          DCD      USBD_Configuration
                  |L8.288|
                          DCD      ||.data||
                  |L8.292|
                          DCD      USBD_HighSpeed
                  |L8.296|
                          DCD      USBD_HID_PollingCnt
                  |L8.300|
                          DCD      usbd_hid_interval
                  |L8.304|
                          DCD      USBD_HID_IdleReload
                  |L8.308|
                          DCD      USBD_HID_IdleCnt
                  |L8.312|
                          DCD      usbd_hid_inreport_num
                  |L8.316|
                          DCD      USBD_HID_IdleSet

                          AREA ||i.USBD_HID_SetIdle||, CODE, READONLY, ALIGN=2

                  USBD_HID_SetIdle PROC
;;;152    
;;;153    BOOL USBD_HID_SetIdle(void)
000000  4809              LDR      r0,|L9.40|
;;;154    {
;;;155        U8 i;
;;;156    
;;;157        if (USBD_SetupPacket.wValueL) {       /* If  > 0 Report ID specified        */
000002  4909              LDR      r1,|L9.40|
000004  7880              LDRB     r0,[r0,#2]  ; USBD_SetupPacket
;;;158            USBD_HID_IdleSet[USBD_SetupPacket.wValueL - 1] = USBD_SetupPacket.wValueH;
000006  78c9              LDRB     r1,[r1,#3]
000008  b110              CBZ      r0,|L9.16|
00000a  4a08              LDR      r2,|L9.44|
00000c  5481              STRB     r1,[r0,r2]
00000e  e009              B        |L9.36|
                  |L9.16|
;;;159        } else {                              /* If == 0 all reports                */
;;;160            for (i = 0; i < usbd_hid_inreport_num; i++) {
000010  4a08              LDR      r2,|L9.52|
000012  2000              MOVS     r0,#0
000014  4b06              LDR      r3,|L9.48|
000016  7812              LDRB     r2,[r2,#0]
000018  e002              B        |L9.32|
                  |L9.26|
;;;161                USBD_HID_IdleSet[i] = USBD_SetupPacket.wValueH;
00001a  5419              STRB     r1,[r3,r0]
00001c  1c40              ADDS     r0,r0,#1
00001e  b2c0              UXTB     r0,r0                 ;160
                  |L9.32|
000020  4290              CMP      r0,r2                 ;160
000022  d3fa              BCC      |L9.26|
                  |L9.36|
;;;162            }
;;;163        }
;;;164    
;;;165        return (__TRUE);
000024  2001              MOVS     r0,#1
;;;166    }
000026  4770              BX       lr
;;;167    
                          ENDP

                  |L9.40|
                          DCD      USBD_SetupPacket
                  |L9.44|
                          DCD      USBD_HID_IdleSet-0x1
                  |L9.48|
                          DCD      USBD_HID_IdleSet
                  |L9.52|
                          DCD      usbd_hid_inreport_num

                          AREA ||i.USBD_HID_SetProtocol||, CODE, READONLY, ALIGN=2

                  USBD_HID_SetProtocol PROC
;;;189    
;;;190    BOOL USBD_HID_SetProtocol(void)
000000  4803              LDR      r0,|L10.16|
;;;191    {
000002  b510              PUSH     {r4,lr}
;;;192        usbd_hid_set_protocol(USBD_SetupPacket.wValueL);
000004  7880              LDRB     r0,[r0,#2]  ; USBD_SetupPacket
000006  f7fffffe          BL       usbd_hid_set_protocol
;;;193        return (__TRUE);
00000a  2001              MOVS     r0,#1
;;;194    }
00000c  bd10              POP      {r4,pc}
;;;195    
                          ENDP

00000e  0000              DCW      0x0000
                  |L10.16|
                          DCD      USBD_SetupPacket

                          AREA ||i.USBD_HID_SetReport||, CODE, READONLY, ALIGN=2

                  USBD_HID_SetReport PROC
;;;106    
;;;107    BOOL USBD_HID_SetReport(void)
000000  b538              PUSH     {r3-r5,lr}
;;;108    {
;;;109        U8 *ptr_buf = 0;
;;;110    
;;;111        /* Report Type   = USBD_SetupPacket.wValueH */
;;;112        /* Report ID     = USBD_SetupPacket.wValueL */
;;;113        /* Report Length = USBD_SetupPacket.wLength */
;;;114        switch (USBD_SetupPacket.wValueH) {
000002  490d              LDR      r1,|L11.56|
000004  2200              MOVS     r2,#0                 ;109
000006  78c8              LDRB     r0,[r1,#3]  ; USBD_SetupPacket
000008  2801              CMP      r0,#1
00000a  d004              BEQ      |L11.22|
00000c  2802              CMP      r0,#2
00000e  d004              BEQ      |L11.26|
000010  2803              CMP      r0,#3
000012  d106              BNE      |L11.34|
000014  e003              B        |L11.30|
                  |L11.22|
;;;115            case HID_REPORT_INPUT:
;;;116                return (__FALSE);        /* Not Supported */
000016  2000              MOVS     r0,#0
;;;117    
;;;118            case HID_REPORT_OUTPUT:
;;;119                ptr_buf  = &USBD_HID_OutReport[1];
;;;120                break;
;;;121    
;;;122            case HID_REPORT_FEATURE:
;;;123                ptr_buf  = &USBD_HID_FeatReport[1];
;;;124                break;
;;;125        }
;;;126    
;;;127        usbd_hid_set_report(USBD_SetupPacket.wValueH, USBD_SetupPacket.wValueL, ptr_buf, USBD_SetupPacket.wLength, USBD_HID_REQ_EP_CTRL);
;;;128        return (__TRUE);
;;;129    }
000018  bd38              POP      {r3-r5,pc}
                  |L11.26|
00001a  4a08              LDR      r2,|L11.60|
00001c  e000              B        |L11.32|
                  |L11.30|
00001e  4a08              LDR      r2,|L11.64|
                  |L11.32|
000020  1c52              ADDS     r2,r2,#1              ;123
                  |L11.34|
000022  2300              MOVS     r3,#0                 ;127
000024  9300              STR      r3,[sp,#0]            ;127
000026  79cb              LDRB     r3,[r1,#7]            ;127  ; USBD_SetupPacket
000028  798c              LDRB     r4,[r1,#6]            ;127  ; USBD_SetupPacket
00002a  7889              LDRB     r1,[r1,#2]            ;127  ; USBD_SetupPacket
00002c  ea442303          ORR      r3,r4,r3,LSL #8       ;127
000030  f7fffffe          BL       usbd_hid_set_report
000034  2001              MOVS     r0,#1                 ;128
000036  bd38              POP      {r3-r5,pc}
;;;130    
                          ENDP

                  |L11.56|
                          DCD      USBD_SetupPacket
                  |L11.60|
                          DCD      USBD_HID_OutReport
                  |L11.64|
                          DCD      USBD_HID_FeatReport

                          AREA ||i.usbd_hid_get_protocol||, CODE, READONLY, ALIGN=1

                  usbd_hid_get_protocol PROC
;;;57     }
;;;58     __weak U8 usbd_hid_get_protocol(void)
000000  2000              MOVS     r0,#0
;;;59     {
;;;60         return (0);
;;;61     };
000002  4770              BX       lr
;;;62     __weak void usbd_hid_set_protocol(U8  protocol)
                          ENDP


                          AREA ||i.usbd_hid_get_report||, CODE, READONLY, ALIGN=1

                  usbd_hid_get_report PROC
;;;49     }
;;;50     __weak int usbd_hid_get_report(U8 rtype, U8 rid, U8 *buf, U8 req)
000000  2000              MOVS     r0,#0
;;;51     {
;;;52         return (0);
;;;53     };
000002  4770              BX       lr
;;;54     __weak void usbd_hid_set_report(U8  rtype, U8 rid, U8 *buf, int len, U8 req)
                          ENDP


                          AREA ||i.usbd_hid_get_report_trigger||, CODE, READONLY, ALIGN=2

                  usbd_hid_get_report_trigger PROC
;;;519    
;;;520    BOOL usbd_hid_get_report_trigger(U8 rid, U8 *buf, int len)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;521    {
000004  4607              MOV      r7,r0
;;;522        if (len > usbd_hid_inreport_max_sz) {
000006  481d              LDR      r0,|L14.124|
000008  4616              MOV      r6,r2                 ;521
00000a  8800              LDRH     r0,[r0,#0]  ; usbd_hid_inreport_max_sz
00000c  4282              CMP      r2,r0
00000e  dd02              BLE      |L14.22|
                  |L14.16|
;;;523            return (__FALSE);
000010  2000              MOVS     r0,#0
                  |L14.18|
;;;524        }
;;;525    
;;;526        if (USBD_Configuration) {
;;;527            DataOutAsyncReq    = __TRUE;        /* Asynchronous data out request      */
;;;528    
;;;529            while (DataOutToSendLen) {
;;;530                if (!USBD_Configuration) {        /* If device not configured reject rq */
;;;531                    DataOutAsyncReq    = __FALSE;   /* Asynchronous data out request      */
;;;532                    ptrDataOut         = NULL;
;;;533                    DataOutSentLen     = 0;
;;;534                    DataOutToSendLen   = 0;
;;;535                    return (__FALSE);
;;;536                }
;;;537            }
;;;538    
;;;539            USBD_HID_InReport[0]   = rid;
;;;540            memcpy(&USBD_HID_InReport[1], buf, len);
;;;541            ptrDataOut             = USBD_HID_InReport;
;;;542            DataOutSentLen         = 0;
;;;543            DataOutToSendLen       = len;
;;;544    
;;;545            if (usbd_hid_inreport_num <= 1) {   /* If only 1 in report skip ReportID  */
;;;546                ptrDataOut ++;
;;;547            } else {                            /* If more in reports, send ReportID  */
;;;548                DataOutToSendLen ++;
;;;549            }
;;;550    
;;;551            USBD_HID_EP_INTIN_Event(0);
;;;552            USBD_HID_IdleCnt[rid]      = 0;
;;;553            return (__TRUE);
;;;554        }
;;;555    
;;;556        return (__FALSE);
;;;557    }
000012  e8bd81f0          POP      {r4-r8,pc}
                  |L14.22|
000016  481a              LDR      r0,|L14.128|
000018  7800              LDRB     r0,[r0,#0]            ;526  ; USBD_Configuration
00001a  2800              CMP      r0,#0                 ;526
00001c  d0f9              BEQ      |L14.18|
00001e  4c19              LDR      r4,|L14.132|
000020  2201              MOVS     r2,#1                 ;527
000022  f04f0800          MOV      r8,#0                 ;527
000026  60e2              STR      r2,[r4,#0xc]          ;529  ; DataOutAsyncReq
000028  e000              B        |L14.44|
                  |L14.42|
00002a  b198              CBZ      r0,|L14.84|
                  |L14.44|
00002c  8862              LDRH     r2,[r4,#2]            ;529  ; DataOutToSendLen
00002e  2a00              CMP      r2,#0                 ;529
000030  d1fb              BNE      |L14.42|
000032  4d15              LDR      r5,|L14.136|
000034  4632              MOV      r2,r6                 ;540
000036  1c68              ADDS     r0,r5,#1              ;540
000038  702f              STRB     r7,[r5,#0]            ;539
00003a  f7fffffe          BL       __aeabi_memcpy
00003e  6165              STR      r5,[r4,#0x14]         ;542  ; ptrDataOut
000040  f8a48004          STRH     r8,[r4,#4]            ;542
000044  8066              STRH     r6,[r4,#2]            ;543
000046  4811              LDR      r0,|L14.140|
000048  7800              LDRB     r0,[r0,#0]            ;545  ; usbd_hid_inreport_num
00004a  2801              CMP      r0,#1                 ;545
00004c  d80b              BHI      |L14.102|
00004e  1c6d              ADDS     r5,r5,#1              ;545
000050  6165              STR      r5,[r4,#0x14]         ;546  ; ptrDataOut
000052  e00b              B        |L14.108|
                  |L14.84|
000054  f8c4800c          STR      r8,[r4,#0xc]          ;532  ; DataOutAsyncReq
000058  f8c48014          STR      r8,[r4,#0x14]         ;533  ; ptrDataOut
00005c  f8a48004          STRH     r8,[r4,#4]            ;533
000060  f8a48002          STRH     r8,[r4,#2]            ;534
000064  e7d4              B        |L14.16|
                  |L14.102|
000066  8860              LDRH     r0,[r4,#2]            ;548  ; DataOutToSendLen
000068  1c40              ADDS     r0,r0,#1              ;548
00006a  8060              STRH     r0,[r4,#2]            ;548
                  |L14.108|
00006c  2000              MOVS     r0,#0                 ;551
00006e  f7fffffe          BL       USBD_HID_EP_INTIN_Event
000072  4807              LDR      r0,|L14.144|
000074  f8008007          STRB     r8,[r0,r7]            ;552
000078  2001              MOVS     r0,#1                 ;553
00007a  e7ca              B        |L14.18|
                          ENDP

                  |L14.124|
                          DCD      usbd_hid_inreport_max_sz
                  |L14.128|
                          DCD      USBD_Configuration
                  |L14.132|
                          DCD      ||.data||
                  |L14.136|
                          DCD      USBD_HID_InReport
                  |L14.140|
                          DCD      usbd_hid_inreport_num
                  |L14.144|
                          DCD      USBD_HID_IdleCnt

                          AREA ||i.usbd_hid_init||, CODE, READONLY, ALIGN=1

                  usbd_hid_init PROC
;;;45     /* Dummy Weak Functions that need to be provided by user */
;;;46     __weak void usbd_hid_init(void)
000000  4770              BX       lr
;;;47     {
;;;48     
;;;49     }
;;;50     __weak int usbd_hid_get_report(U8 rtype, U8 rid, U8 *buf, U8 req)
                          ENDP


                          AREA ||i.usbd_hid_set_protocol||, CODE, READONLY, ALIGN=1

                  usbd_hid_set_protocol PROC
;;;61     };
;;;62     __weak void usbd_hid_set_protocol(U8  protocol)
000000  4770              BX       lr
;;;63     {
;;;64     
;;;65     };
;;;66     
                          ENDP


                          AREA ||i.usbd_hid_set_report||, CODE, READONLY, ALIGN=1

                  usbd_hid_set_report PROC
;;;53     };
;;;54     __weak void usbd_hid_set_report(U8  rtype, U8 rid, U8 *buf, int len, U8 req)
000000  4770              BX       lr
;;;55     {
;;;56     
;;;57     }
;;;58     __weak U8 usbd_hid_get_protocol(void)
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  cnt_for_4ms
000000  00                DCB      0x00
                  USBD_HID_Protocol
000001  00                DCB      0x00
                  DataOutToSendLen
000002  0000              DCB      0x00,0x00
                  DataOutSentLen
000004  0000              DCB      0x00,0x00
                  DataInReceMax
000006  0000              DCB      0x00,0x00
                  DataInReceLen
000008  0000              DCB      0x00,0x00
                  DataFeatReceLen
00000a  0000              DCB      0x00,0x00
                  DataOutAsyncReq
                          DCD      0x00000000
                  DataOutUpdateReqMask
                          DCD      0x00000000
                  ptrDataOut
                          DCD      0x00000000
                  DataOutEndWithShortPacket
                          DCD      0x00000000
                  ptrDataIn
                          DCD      0x00000000
                  ptrDataFeat
                          DCD      0x00000000

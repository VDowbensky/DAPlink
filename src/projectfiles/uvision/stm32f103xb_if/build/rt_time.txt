; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\rt_time.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\rt_time.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\rt_time.crf ..\..\..\source\rtos\rt_Time.c]
                          THUMB

                          AREA ||i.rt_dly_wait||, CODE, READONLY, ALIGN=1

                  rt_dly_wait PROC
;;;49     
;;;50     void rt_dly_wait (U16 delay_time) {
000000  2103              MOVS     r1,#3
;;;51       /* Delay task by "delay_time" */
;;;52       rt_block (delay_time, WAIT_DLY);
000002  f7ffbffe          B.W      rt_block
;;;53     }
;;;54     
                          ENDP


                          AREA ||i.rt_itv_set||, CODE, READONLY, ALIGN=2

                  rt_itv_set PROC
;;;57     
;;;58     void rt_itv_set (U16 interval_time) {
000000  4903              LDR      r1,|L2.16|
;;;59       /* Set interval length and define start of first interval */
;;;60       os_tsk.run->interval_time = interval_time;
;;;61       os_tsk.run->delta_time = interval_time + (U16)os_time;
000002  4a04              LDR      r2,|L2.20|
000004  6809              LDR      r1,[r1,#0]            ;60  ; os_tsk
000006  82c8              STRH     r0,[r1,#0x16]         ;60
000008  8812              LDRH     r2,[r2,#0]  ; os_time
00000a  4410              ADD      r0,r0,r2
00000c  8288              STRH     r0,[r1,#0x14]
;;;62     }
00000e  4770              BX       lr
;;;63     
                          ENDP

                  |L2.16|
                          DCD      os_tsk
                  |L2.20|
                          DCD      ||.data||

                          AREA ||i.rt_itv_wait||, CODE, READONLY, ALIGN=2

                  rt_itv_wait PROC
;;;66     
;;;67     void rt_itv_wait (void) {
000000  4807              LDR      r0,|L3.32|
;;;68       /* Wait for interval end and define start of next one */
;;;69       U16 delta;
;;;70     
;;;71       delta = os_tsk.run->delta_time - (U16)os_time;
000002  6801              LDR      r1,[r0,#0]  ; os_tsk
000004  4807              LDR      r0,|L3.36|
000006  8a8a              LDRH     r2,[r1,#0x14]
000008  8800              LDRH     r0,[r0,#0]  ; os_time
;;;72       os_tsk.run->delta_time += os_tsk.run->interval_time;
00000a  8acb              LDRH     r3,[r1,#0x16]
00000c  1a10              SUBS     r0,r2,r0              ;71
00000e  441a              ADD      r2,r2,r3
000010  b280              UXTH     r0,r0                 ;71
000012  828a              STRH     r2,[r1,#0x14]
;;;73       if ((delta & 0x8000) == 0) {
000014  0401              LSLS     r1,r0,#16
000016  d402              BMI      |L3.30|
;;;74         rt_block (delta, WAIT_ITV);
000018  2104              MOVS     r1,#4
00001a  f7ffbffe          B.W      rt_block
                  |L3.30|
;;;75       }
;;;76     }
00001e  4770              BX       lr
;;;77     
                          ENDP

                  |L3.32|
                          DCD      os_tsk
                  |L3.36|
                          DCD      ||.data||

                          AREA ||i.rt_time_get||, CODE, READONLY, ALIGN=2

                  rt_time_get PROC
;;;41     
;;;42     U32 rt_time_get (void) {
000000  4801              LDR      r0,|L4.8|
;;;43       /* Get system time tick */
;;;44       return (os_time);
000002  6800              LDR      r0,[r0,#0]  ; os_time
;;;45     }
000004  4770              BX       lr
;;;46     
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=2

                  os_time
                          DCD      0x00000000

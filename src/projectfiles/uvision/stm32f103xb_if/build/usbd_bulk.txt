; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\usbd_bulk.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\usbd_bulk.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\usbd_bulk.crf ..\..\..\source\usb\bulk\usbd_bulk.c]
                          THUMB

                          AREA ||i.USBD_BULK_EP_BULKIN_Event||, CODE, READONLY, ALIGN=2

                  USBD_BULK_EP_BULKIN_Event PROC
;;;48     
;;;49     void USBD_BULK_EP_BULKIN_Event(U32 event)
000000  b51c              PUSH     {r2-r4,lr}
;;;50     {
;;;51         uint8_t * sbuf = 0;
000002  2000              MOVS     r0,#0
;;;52         int slen;
;;;53         if(DAP_queue_get_send_buf(&DAP_Cmd_queue, &sbuf, &slen)){
000004  9001              STR      r0,[sp,#4]
000006  466a              MOV      r2,sp
000008  a901              ADD      r1,sp,#4
00000a  4808              LDR      r0,|L1.44|
00000c  f7fffffe          BL       DAP_queue_get_send_buf
000010  b140              CBZ      r0,|L1.36|
;;;54             USBD_WriteEP(usbd_bulk_ep_bulkin | 0x80, sbuf, slen);
000012  4807              LDR      r0,|L1.48|
000014  e9dd2100          LDRD     r2,r1,[sp,#0]
000018  7800              LDRB     r0,[r0,#0]  ; usbd_bulk_ep_bulkin
00001a  f0400080          ORR      r0,r0,#0x80
00001e  f7fffffe          BL       USBD_WriteEP
;;;55         } else {
;;;56             USB_ResponseIdle = 1;
;;;57         }
;;;58     }
000022  bd1c              POP      {r2-r4,pc}
                  |L1.36|
000024  4903              LDR      r1,|L1.52|
000026  2001              MOVS     r0,#1                 ;56
000028  7008              STRB     r0,[r1,#0]            ;56
00002a  bd1c              POP      {r2-r4,pc}
;;;59     
                          ENDP

                  |L1.44|
                          DCD      ||.bss||
                  |L1.48|
                          DCD      usbd_bulk_ep_bulkin
                  |L1.52|
                          DCD      ||.data||

                          AREA ||i.USBD_BULK_EP_BULKOUT_Event||, CODE, READONLY, ALIGN=2

                  USBD_BULK_EP_BULKOUT_Event PROC
;;;66     
;;;67     void USBD_BULK_EP_BULKOUT_Event(U32 event)
000000  b538              PUSH     {r3-r5,lr}
;;;68     {
;;;69         U16 bytes_rece;
;;;70         uint8_t * rbuf;
;;;71     
;;;72         bytes_rece      = USBD_ReadEP(usbd_bulk_ep_bulkout, ptrDataIn, USBD_Bulk_BulkBufSize - DataInReceLen);
000002  4d16              LDR      r5,|L2.92|
000004  4c16              LDR      r4,|L2.96|
000006  8828              LDRH     r0,[r5,#0]  ; USBD_Bulk_BulkBufSize
000008  8861              LDRH     r1,[r4,#2]  ; DataInReceLen
00000a  1a42              SUBS     r2,r0,r1
00000c  4815              LDR      r0,|L2.100|
00000e  6861              LDR      r1,[r4,#4]  ; ptrDataIn
000010  7800              LDRB     r0,[r0,#0]  ; usbd_bulk_ep_bulkout
000012  f7fffffe          BL       USBD_ReadEP
;;;73         ptrDataIn      += bytes_rece;
000016  6861              LDR      r1,[r4,#4]  ; ptrDataIn
000018  b280              UXTH     r0,r0                 ;72
00001a  4401              ADD      r1,r1,r0
;;;74         DataInReceLen  += bytes_rece;
00001c  6061              STR      r1,[r4,#4]  ; ptrDataIn
00001e  8861              LDRH     r1,[r4,#2]  ; DataInReceLen
000020  4401              ADD      r1,r1,r0
000022  b28a              UXTH     r2,r1
000024  8062              STRH     r2,[r4,#2]
;;;75     
;;;76         if ((DataInReceLen >= USBD_Bulk_BulkBufSize) ||
000026  8829              LDRH     r1,[r5,#0]  ; USBD_Bulk_BulkBufSize
000028  428a              CMP      r2,r1
00002a  d206              BCS      |L2.58|
;;;77                 (bytes_rece    <  usbd_bulk_maxpacketsize[USBD_HighSpeed])) {
00002c  4b0f              LDR      r3,|L2.108|
00002e  490e              LDR      r1,|L2.104|
000030  781b              LDRB     r3,[r3,#0]  ; USBD_HighSpeed
000032  f8311013          LDRH     r1,[r1,r3,LSL #1]
000036  4281              CMP      r1,r0
000038  d90f              BLS      |L2.90|
                  |L2.58|
;;;78             if (DAP_queue_execute_buf(&DAP_Cmd_queue, USBD_Bulk_BulkOutBuf, DataInReceLen, &rbuf)) {
00003a  466b              MOV      r3,sp
00003c  490c              LDR      r1,|L2.112|
00003e  480d              LDR      r0,|L2.116|
000040  f7fffffe          BL       DAP_queue_execute_buf
000044  2500              MOVS     r5,#0
000046  b128              CBZ      r0,|L2.84|
;;;79                 //Trigger the BULKIn for the reply
;;;80                 if (USB_ResponseIdle) {
000048  7820              LDRB     r0,[r4,#0]  ; USB_ResponseIdle
00004a  b118              CBZ      r0,|L2.84|
;;;81                     USBD_BULK_EP_BULKIN_Event(0);
00004c  2000              MOVS     r0,#0
00004e  f7fffffe          BL       USBD_BULK_EP_BULKIN_Event
;;;82                     USB_ResponseIdle = 0;
000052  7025              STRB     r5,[r4,#0]
                  |L2.84|
;;;83                 }
;;;84             }
;;;85             //revert the input pointers
;;;86             DataInReceLen = 0;
000054  8065              STRH     r5,[r4,#2]
;;;87             ptrDataIn     = USBD_Bulk_BulkOutBuf;
000056  4806              LDR      r0,|L2.112|
000058  6060              STR      r0,[r4,#4]  ; ptrDataIn
                  |L2.90|
;;;88         }
;;;89     }
00005a  bd38              POP      {r3-r5,pc}
;;;90     
                          ENDP

                  |L2.92|
                          DCD      USBD_Bulk_BulkBufSize
                  |L2.96|
                          DCD      ||.data||
                  |L2.100|
                          DCD      usbd_bulk_ep_bulkout
                  |L2.104|
                          DCD      usbd_bulk_maxpacketsize
                  |L2.108|
                          DCD      USBD_HighSpeed
                  |L2.112|
                          DCD      USBD_Bulk_BulkOutBuf
                  |L2.116|
                          DCD      ||.bss||

                          AREA ||i.USBD_BULK_EP_BULK_Event||, CODE, READONLY, ALIGN=1

                  USBD_BULK_EP_BULK_Event PROC
;;;99     
;;;100    void USBD_BULK_EP_BULK_Event(U32 event)
000000  b510              PUSH     {r4,lr}
;;;101    {
000002  4604              MOV      r4,r0
;;;102        if (event & USBD_EVT_OUT) {
000004  0740              LSLS     r0,r0,#29
000006  d502              BPL      |L3.14|
;;;103            USBD_BULK_EP_BULKOUT_Event(0);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       USBD_BULK_EP_BULKOUT_Event
                  |L3.14|
;;;104        }
;;;105    
;;;106        if (event & USBD_EVT_IN) {
00000e  0720              LSLS     r0,r4,#28
000010  d504              BPL      |L3.28|
;;;107            USBD_BULK_EP_BULKIN_Event(0);
000012  e8bd4010          POP      {r4,lr}
000016  2000              MOVS     r0,#0
000018  f7ffbffe          B.W      USBD_BULK_EP_BULKIN_Event
                  |L3.28|
;;;108        }
;;;109    }
00001c  bd10              POP      {r4,pc}
                          ENDP


                          AREA ||i.usbd_bulk_init||, CODE, READONLY, ALIGN=2

                  usbd_bulk_init PROC
;;;34     
;;;35     void usbd_bulk_init(void)
000000  b510              PUSH     {r4,lr}
;;;36     {
;;;37         ptrDataIn     = USBD_Bulk_BulkOutBuf;
000002  4c06              LDR      r4,|L4.28|
000004  4804              LDR      r0,|L4.24|
;;;38         DataInReceLen = 0;
000006  6060              STR      r0,[r4,#4]  ; ptrDataIn
000008  2000              MOVS     r0,#0
00000a  8060              STRH     r0,[r4,#2]
;;;39         DAP_queue_init(&DAP_Cmd_queue);
00000c  4804              LDR      r0,|L4.32|
00000e  f7fffffe          BL       DAP_queue_init
;;;40         USB_ResponseIdle = 1;
000012  2001              MOVS     r0,#1
000014  7020              STRB     r0,[r4,#0]
;;;41     }
000016  bd10              POP      {r4,pc}
;;;42     
                          ENDP

                  |L4.24|
                          DCD      USBD_Bulk_BulkOutBuf
                  |L4.28|
                          DCD      ||.data||
                  |L4.32|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  DAP_Cmd_queue
                          %        280

                          AREA ||.data||, DATA, ALIGN=2

                  USB_ResponseIdle
000000  0000              DCB      0x00,0x00
                  DataInReceLen
000002  0000              DCB      0x00,0x00
                  ptrDataIn
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\..\\..\\source\\usb\\bulk\\usbd_bulk.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_usbd_bulk_c_3141f2e1____REV16|
#line 480 "..\\..\\..\\source\\cmsis-core\\cmsis_armcc.h"
|__asm___11_usbd_bulk_c_3141f2e1____REV16| PROC
#line 481

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_usbd_bulk_c_3141f2e1____REVSH|
#line 495
|__asm___11_usbd_bulk_c_3141f2e1____REVSH| PROC
#line 496

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_usbd_bulk_c_3141f2e1____RRX|
#line 682
|__asm___11_usbd_bulk_c_3141f2e1____RRX| PROC
#line 683

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

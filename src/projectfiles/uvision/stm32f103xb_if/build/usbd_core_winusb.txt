; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\usbd_core_winusb.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\usbd_core_winusb.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink\cmsis-dap -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\usb2uart -I..\..\..\source\daplink\settings -I..\..\..\source\daplink -I..\..\..\source\daplink\interface -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\target -I..\..\..\source\rtos -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_if -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.1\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DHID_ENDPOINT -DMSC_ENDPOINT -DCDC_ENDPOINT -DWEBUSB_INTERFACE -DWINUSB_INTERFACE -DDRAG_N_DROP_SUPPORT -DDAPLINK_IF -DDAPLINK_BUILD_KEY=0x9B939E8F -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 -DBULK_ENDPOINT --omf_browse=.\build\usbd_core_winusb.crf ..\..\..\source\usb\winusb\usbd_core_winusb.c]
                          THUMB

                          AREA ||i.USBD_EndPoint0_Setup_WinUSB_ReqToDevice||, CODE, READONLY, ALIGN=2

                  USBD_EndPoint0_Setup_WinUSB_ReqToDevice PROC
;;;32     
;;;33     __weak BOOL USBD_EndPoint0_Setup_WinUSB_ReqToDevice(void)
000000  b510              PUSH     {r4,lr}
;;;34     {
;;;35         U8  *pD;
;;;36         U32 len;
;;;37     
;;;38         BOOL success = (__FALSE);
;;;39         if (USBD_SetupPacket.bRequest == usbd_winusb_vendor_code) {			/* vendor code correct? */
000002  4a15              LDR      r2,|L1.88|
000004  4915              LDR      r1,|L1.92|
000006  2400              MOVS     r4,#0                 ;38
000008  7850              LDRB     r0,[r2,#1]  ; USBD_SetupPacket
00000a  7809              LDRB     r1,[r1,#0]  ; usbd_winusb_vendor_code
00000c  4288              CMP      r0,r1
00000e  d120              BNE      |L1.82|
;;;40             switch (USBD_SetupPacket.wIndex) {
000010  7950              LDRB     r0,[r2,#5]  ; USBD_SetupPacket
000012  7911              LDRB     r1,[r2,#4]  ; USBD_SetupPacket
000014  ea412000          ORR      r0,r1,r0,LSL #8
000018  2807              CMP      r0,#7
00001a  d11a              BNE      |L1.82|
;;;41                 case WINUSB_REQUEST_GET_DESCRIPTOR_SET:
;;;42                     pD = (U8 *)USBD_WinUSBDescriptorSetDescriptor;
;;;43                     USBD_EP0Data.pData = pD;
00001c  4b11              LDR      r3,|L1.100|
00001e  4810              LDR      r0,|L1.96|
;;;44                     len = ((WINUSB_DESCRIPTOR_SET_HEADER *)pD)->wTotalLength;
;;;45                     success = (__TRUE);
000020  2401              MOVS     r4,#1
000022  6018              STR      r0,[r3,#0]            ;44  ; USBD_EP0Data
000024  7a41              LDRB     r1,[r0,#9]            ;44
000026  7a00              LDRB     r0,[r0,#8]            ;44
000028  ea402101          ORR      r1,r0,r1,LSL #8       ;44
;;;46                     break;
;;;47     
;;;48                 default:
;;;49                     break;
;;;50             }
;;;51         }
;;;52     
;;;53         if (success) {
;;;54             if (len < USBD_SetupPacket.wLength) {
00002c  79d0              LDRB     r0,[r2,#7]  ; USBD_SetupPacket
00002e  7992              LDRB     r2,[r2,#6]  ; USBD_SetupPacket
000030  ea422000          ORR      r0,r2,r0,LSL #8
000034  4288              CMP      r0,r1
000036  d909              BLS      |L1.76|
;;;55                 USBD_EP0Data.Count = len;
;;;56                 if (!(len & (usbd_max_packet0 - 1))) {
000038  480b              LDR      r0,|L1.104|
00003a  8099              STRH     r1,[r3,#4]            ;55
00003c  7800              LDRB     r0,[r0,#0]  ; usbd_max_packet0
00003e  1e40              SUBS     r0,r0,#1
000040  4201              TST      r1,r0
000042  d104              BNE      |L1.78|
;;;57                     USBD_ZLP = 1;
000044  4909              LDR      r1,|L1.108|
000046  2001              MOVS     r0,#1
000048  7008              STRB     r0,[r1,#0]
00004a  e000              B        |L1.78|
                  |L1.76|
;;;58                 }
;;;59             } else {
;;;60                 USBD_EP0Data.Count = USBD_SetupPacket.wLength;
00004c  8098              STRH     r0,[r3,#4]
                  |L1.78|
;;;61             }
;;;62     
;;;63             USBD_DataInStage();
00004e  f7fffffe          BL       USBD_DataInStage
                  |L1.82|
;;;64         }
;;;65     
;;;66         return success;
000052  4620              MOV      r0,r4
;;;67     }
000054  bd10              POP      {r4,pc}
                          ENDP

000056  0000              DCW      0x0000
                  |L1.88|
                          DCD      USBD_SetupPacket
                  |L1.92|
                          DCD      usbd_winusb_vendor_code
                  |L1.96|
                          DCD      USBD_WinUSBDescriptorSetDescriptor
                  |L1.100|
                          DCD      USBD_EP0Data
                  |L1.104|
                          DCD      usbd_max_packet0
                  |L1.108|
                          DCD      USBD_ZLP

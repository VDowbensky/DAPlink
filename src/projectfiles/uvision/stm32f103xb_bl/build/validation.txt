; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave --gnu -o.\build\validation.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\validation.d --cpu=Cortex-M3 --apcs=interwork --no_unaligned_access --diag_suppress=9931 -I..\..\..\source\usb -I..\..\..\source\daplink -I..\..\..\source\daplink\bootloader -I..\..\..\source\cmsis-core -I..\..\..\source\hic_hal -I..\..\..\source\daplink\drag-n-drop -I..\..\..\source\daplink\settings -I..\..\..\source\target -I..\..\..\source\rtos_none -I..\..\..\source\hic_hal\stm32\stm32f103xb -I..\..\..\source\hic_hal\stm32\stm32f103xb\cmsis -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver -I..\..\..\source\hic_hal\stm32\stm32f103xb\STM32F1xx_HAL_Driver\Inc -I.\RTE\_stm32f103xb_bl -IC:\Users\Admin\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Admin\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.4.0\Device\Include -D__UVISION_VERSION=538 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DDAPLINK_VERSION=256 -DMSC_ENDPOINT -DDAPLINK_BL -DDAPLINK_BUILD_KEY=0x9B939D93 -DDRAG_N_DROP_SUPPORT -DOS_TICK=10000 -DINTERFACE_STM32F103XB -DUSE_HAL_DRIVER -DSTM32F103xB -DDAPLINK_HIC_ID=0x97969908 -D__packed=__packed -DDAPLINK_NO_ASSERT_FILENAMES -DOS_CLOCK=72000000 --omf_browse=.\build\validation.crf ..\..\..\source\daplink\validation.c]
                          THUMB

                          AREA ||i.test_range||, CODE, READONLY, ALIGN=1

                  test_range PROC
;;;27     
;;;28     static inline uint32_t test_range(const uint32_t test, const uint32_t min, const uint32_t max)
000000  4288              CMP      r0,r1
;;;29     {
000002  d303              BCC      |L1.12|
;;;30         return ((test < min) || (test > max)) ? 0 : 1;
000004  4290              CMP      r0,r2
000006  d801              BHI      |L1.12|
000008  2001              MOVS     r0,#1
;;;31     }
00000a  4770              BX       lr
                  |L1.12|
00000c  2000              MOVS     r0,#0                 ;30
00000e  4770              BX       lr
;;;32     
                          ENDP


                          AREA ||i.validate_bin_nvic||, CODE, READONLY, ALIGN=2

                  validate_bin_nvic PROC
;;;32     
;;;33     uint8_t validate_bin_nvic(const uint8_t *buf)
000000  e92d43f8          PUSH     {r3-r9,lr}
;;;34     {
000004  4680              MOV      r8,r0
;;;35         if (g_target_family && g_target_family->validate_bin_nvic) {
000006  482e              LDR      r0,|L2.192|
000008  6800              LDR      r0,[r0,#0]  ; g_target_family
00000a  b140              CBZ      r0,|L2.30|
00000c  6a01              LDR      r1,[r0,#0x20]
00000e  b131              CBZ      r1,|L2.30|
;;;36             return g_target_family && g_target_family->validate_bin_nvic(buf);
000010  4640              MOV      r0,r8
000012  4788              BLX      r1
000014  2800              CMP      r0,#0
000016  d000              BEQ      |L2.26|
                  |L2.24|
000018  2001              MOVS     r0,#1
                  |L2.26|
;;;37         } else if (g_board_info.target_cfg) {
;;;38             uint32_t i = 4, nvic_val = 0;
;;;39             uint8_t in_range = 0;
;;;40             // test the initial SP value
;;;41             memcpy(&nvic_val, buf + 0, sizeof(nvic_val));
;;;42     
;;;43             region_info_t * region = g_board_info.target_cfg->ram_regions;
;;;44             for (; region->start != 0 || region->end != 0; ++region) {
;;;45                 if (1 == test_range(nvic_val, region->start, region->end)) {
;;;46                     in_range = 1;
;;;47                     break;
;;;48                 }
;;;49             }
;;;50     
;;;51             if (in_range == 0) {
;;;52                 return 0;
;;;53             }
;;;54     
;;;55             // Reset_Handler
;;;56             // NMI_Handler
;;;57             // HardFault_Handler
;;;58             for (; i <= 12; i += 4) {
;;;59                 in_range = 0;
;;;60                 memcpy(&nvic_val, buf + i, sizeof(nvic_val));
;;;61                 region_info_t * region = g_board_info.target_cfg->flash_regions;
;;;62                 for (; region->start != 0 || region->end != 0; ++region) {
;;;63                     if (1 == test_range(nvic_val, region->start, region->end)) {
;;;64                         in_range = 1;
;;;65                         break;
;;;66                     }
;;;67                 }
;;;68                 if (in_range == 0) {
;;;69                     return 0;
;;;70                 }
;;;71             }
;;;72     
;;;73             return 1;
;;;74     
;;;75         } else {
;;;76             return 0;
;;;77         }
;;;78     }
00001a  e8bd83f8          POP      {r3-r9,pc}
                  |L2.30|
00001e  4829              LDR      r0,|L2.196|
000020  4681              MOV      r9,r0                 ;37
000022  f7fffffe          BL       __aeabi_uread4
000026  1e04              SUBS     r4,r0,#0              ;37
000028  d0f7              BEQ      |L2.26|
00002a  2000              MOVS     r0,#0                 ;38
00002c  2504              MOVS     r5,#4                 ;38
00002e  4607              MOV      r7,r0                 ;39
000030  9000              STR      r0,[sp,#0]            ;41
000032  462a              MOV      r2,r5                 ;41
000034  4641              MOV      r1,r8                 ;41
000036  4668              MOV      r0,sp                 ;41
000038  f7fffffe          BL       __aeabi_memcpy
00003c  34d4              ADDS     r4,r4,#0xd4           ;43
00003e  e00a              B        |L2.86|
                  |L2.64|
000040  1d20              ADDS     r0,r4,#4              ;45
000042  f7fffffe          BL       __aeabi_uread4
000046  4602              MOV      r2,r0                 ;45
000048  4631              MOV      r1,r6                 ;45
00004a  9800              LDR      r0,[sp,#0]            ;45
00004c  f7fffffe          BL       test_range
000050  2801              CMP      r0,#1                 ;45
000052  d030              BEQ      |L2.182|
000054  3414              ADDS     r4,r4,#0x14           ;45
                  |L2.86|
000056  4620              MOV      r0,r4                 ;44
000058  f7fffffe          BL       __aeabi_uread4
00005c  0006              MOVS     r6,r0                 ;44
00005e  d1ef              BNE      |L2.64|
000060  1d20              ADDS     r0,r4,#4              ;44
000062  f7fffffe          BL       __aeabi_uread4
000066  2800              CMP      r0,#0                 ;44
000068  d1ea              BNE      |L2.64|
00006a  b33f              CBZ      r7,|L2.188|
00006c  e023              B        |L2.182|
                  |L2.110|
00006e  2600              MOVS     r6,#0                 ;59
000070  eb080105          ADD      r1,r8,r5              ;60
000074  2204              MOVS     r2,#4                 ;60
000076  4668              MOV      r0,sp                 ;60
000078  f7fffffe          BL       __aeabi_memcpy
00007c  4648              MOV      r0,r9                 ;60
00007e  f7fffffe          BL       __aeabi_uread4
000082  f100040c          ADD      r4,r0,#0xc            ;61
000086  e00a              B        |L2.158|
                  |L2.136|
000088  1d20              ADDS     r0,r4,#4              ;63
00008a  f7fffffe          BL       __aeabi_uread4
00008e  4602              MOV      r2,r0                 ;63
000090  4639              MOV      r1,r7                 ;63
000092  9800              LDR      r0,[sp,#0]            ;63
000094  f7fffffe          BL       test_range
000098  2801              CMP      r0,#1                 ;63
00009a  d00b              BEQ      |L2.180|
00009c  3414              ADDS     r4,r4,#0x14           ;63
                  |L2.158|
00009e  4620              MOV      r0,r4                 ;62
0000a0  f7fffffe          BL       __aeabi_uread4
0000a4  0007              MOVS     r7,r0                 ;62
0000a6  d1ef              BNE      |L2.136|
0000a8  1d20              ADDS     r0,r4,#4              ;62
0000aa  f7fffffe          BL       __aeabi_uread4
0000ae  2800              CMP      r0,#0                 ;62
0000b0  d1ea              BNE      |L2.136|
0000b2  b11e              CBZ      r6,|L2.188|
                  |L2.180|
0000b4  1d2d              ADDS     r5,r5,#4              ;68
                  |L2.182|
0000b6  2d0c              CMP      r5,#0xc               ;58
0000b8  d9d9              BLS      |L2.110|
0000ba  e7ad              B        |L2.24|
                  |L2.188|
0000bc  2000              MOVS     r0,#0                 ;69
0000be  e7ac              B        |L2.26|
;;;79     
                          ENDP

                  |L2.192|
                          DCD      g_target_family
                  |L2.196|
                          DCD      g_board_info+0x10

                          AREA ||i.validate_hexfile||, CODE, READONLY, ALIGN=2

                  validate_hexfile PROC
;;;79     
;;;80     uint8_t validate_hexfile(const uint8_t *buf)
000000  490b              LDR      r1,|L3.48|
;;;81     {
;;;82         if (g_target_family && g_target_family->validate_hexfile) {
000002  6809              LDR      r1,[r1,#0]  ; g_target_family
000004  b111              CBZ      r1,|L3.12|
000006  6a49              LDR      r1,[r1,#0x24]
000008  b101              CBZ      r1,|L3.12|
;;;83             return g_target_family->validate_hexfile(buf);
00000a  4708              BX       r1
                  |L3.12|
;;;84         } else {
;;;85             // look here for known hex records
;;;86             // add hex identifier b[0] == ':' && b[8] == {'0', '2', '3', '4', '5'}
;;;87             return ((buf[0] == ':') && ((buf[8] == '0') || (buf[8] == '2') || (buf[8] == '3') || (buf[8] == '4') || (buf[8] == '5'))) ? 1 : 0;
00000c  7801              LDRB     r1,[r0,#0]
00000e  293a              CMP      r1,#0x3a
000010  d10a              BNE      |L3.40|
000012  7a00              LDRB     r0,[r0,#8]
000014  2830              CMP      r0,#0x30
000016  d009              BEQ      |L3.44|
000018  2832              CMP      r0,#0x32
00001a  d007              BEQ      |L3.44|
00001c  2833              CMP      r0,#0x33
00001e  d005              BEQ      |L3.44|
000020  2834              CMP      r0,#0x34
000022  d003              BEQ      |L3.44|
000024  2835              CMP      r0,#0x35
000026  d001              BEQ      |L3.44|
                  |L3.40|
000028  2000              MOVS     r0,#0
;;;88         }
;;;89     }
00002a  4770              BX       lr
                  |L3.44|
00002c  2001              MOVS     r0,#1                 ;87
00002e  4770              BX       lr
                          ENDP

                  |L3.48|
                          DCD      g_target_family
